# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  PEN_MOUSEID = -2
  PEN_TOUCHID = -2
  PEN_INPUT_DOWN = 1 << 0
  PEN_INPUT_BUTTON_1 = 1 << 1
  PEN_INPUT_BUTTON_2 = 1 << 2
  PEN_INPUT_BUTTON_3 = 1 << 3
  PEN_INPUT_BUTTON_4 = 1 << 4
  PEN_INPUT_BUTTON_5 = 1 << 5
  PEN_INPUT_ERASER_TIP = 1 << 30

  # Enum

  PEN_AXIS_PRESSURE = 0
  PEN_AXIS_XTILT = 1
  PEN_AXIS_YTILT = 2
  PEN_AXIS_DISTANCE = 3
  PEN_AXIS_ROTATION = 4
  PEN_AXIS_SLIDER = 5
  PEN_AXIS_TANGENTIAL_PRESSURE = 6
  PEN_AXIS_COUNT = 7

  # Typedef

  typedef :uint, :SDL_PenID
  typedef :uint, :SDL_PenInputFlags
  typedef :int, :SDL_PenAxis

  # Struct


  # Function

  def self.setup_pen_symbols(output_error = false)
    symbols = [
    ]
    apis = {
    }
    args = {
    }
    retvals = {
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

