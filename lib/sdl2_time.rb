# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum

  DATE_FORMAT_YYYYMMDD = 0
  DATE_FORMAT_DDMMYYYY = 1
  DATE_FORMAT_MMDDYYYY = 2
  TIME_FORMAT_24HR = 0
  TIME_FORMAT_12HR = 1

  # Typedef

  typedef :int, :SDL_DateFormat
  typedef :int, :SDL_TimeFormat

  # Struct

  class DateTime < FFI::Struct
    layout(
      :year, :int,
      :month, :int,
      :day, :int,
      :hour, :int,
      :minute, :int,
      :second, :int,
      :nanosecond, :int,
      :day_of_week, :int,
      :utc_offset, :int,
    )
  end


  # Function

  def self.setup_time_symbols(output_error = false)
    symbols = [
      :SDL_GetDateTimeLocalePreferences,
      :SDL_GetCurrentTime,
      :SDL_TimeToDateTime,
      :SDL_DateTimeToTime,
      :SDL_TimeToWindows,
      :SDL_TimeFromWindows,
      :SDL_GetDaysInMonth,
      :SDL_GetDayOfYear,
      :SDL_GetDayOfWeek,
    ]
    apis = {
      :SDL_GetDateTimeLocalePreferences => :GetDateTimeLocalePreferences,
      :SDL_GetCurrentTime => :GetCurrentTime,
      :SDL_TimeToDateTime => :TimeToDateTime,
      :SDL_DateTimeToTime => :DateTimeToTime,
      :SDL_TimeToWindows => :TimeToWindows,
      :SDL_TimeFromWindows => :TimeFromWindows,
      :SDL_GetDaysInMonth => :GetDaysInMonth,
      :SDL_GetDayOfYear => :GetDayOfYear,
      :SDL_GetDayOfWeek => :GetDayOfWeek,
    }
    args = {
      :SDL_GetDateTimeLocalePreferences => [:pointer, :pointer],
      :SDL_GetCurrentTime => [:pointer],
      :SDL_TimeToDateTime => [:long_long, :pointer, :bool],
      :SDL_DateTimeToTime => [:pointer, :pointer],
      :SDL_TimeToWindows => [:long_long, :pointer, :pointer],
      :SDL_TimeFromWindows => [:uint, :uint],
      :SDL_GetDaysInMonth => [:int, :int],
      :SDL_GetDayOfYear => [:int, :int, :int],
      :SDL_GetDayOfWeek => [:int, :int, :int],
    }
    retvals = {
      :SDL_GetDateTimeLocalePreferences => :bool,
      :SDL_GetCurrentTime => :bool,
      :SDL_TimeToDateTime => :bool,
      :SDL_DateTimeToTime => :bool,
      :SDL_TimeToWindows => :void,
      :SDL_TimeFromWindows => :long_long,
      :SDL_GetDaysInMonth => :int,
      :SDL_GetDayOfYear => :int,
      :SDL_GetDayOfWeek => :int,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

