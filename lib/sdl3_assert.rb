# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum

  ASSERTION_RETRY = 0
  ASSERTION_BREAK = 1
  ASSERTION_ABORT = 2
  ASSERTION_IGNORE = 3
  ASSERTION_ALWAYS_IGNORE = 4

  # Typedef

  typedef :int, :SDL_AssertState
  callback :SDL_AssertionHandler, [:pointer, :pointer], :int

  # Struct

  class AssertData < FFI::Struct
    layout(
      :always_ignore, :bool,
      :trigger_count, :uint,
      :condition, :pointer,
      :filename, :pointer,
      :linenum, :int,
      :function, :pointer,
      :next, :pointer,
    )
  end


  # Function

  def self.setup_assert_symbols(output_error = false)
    entries = [
      [:ReportAssertion, :SDL_ReportAssertion, [:pointer, :pointer, :pointer, :int], :int],
      [:SetAssertionHandler, :SDL_SetAssertionHandler, [:SDL_AssertionHandler, :pointer], :void],
      [:GetDefaultAssertionHandler, :SDL_GetDefaultAssertionHandler, [], :pointer],
      [:GetAssertionHandler, :SDL_GetAssertionHandler, [:pointer], :pointer],
      [:GetAssertionReport, :SDL_GetAssertionReport, [], :pointer],
      [:ResetAssertionReport, :SDL_ResetAssertionReport, [], :void],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

