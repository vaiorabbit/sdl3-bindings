# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  AUDIO_MASK_BITSIZE = 0xFF
  AUDIO_MASK_FLOAT = 1 << 8
  AUDIO_MASK_BIG_ENDIAN = 1 << 12
  AUDIO_MASK_SIGNED = 1 << 15

  # Enum

  AUDIO_UNKNOWN = 0
  AUDIO_U8 = 8
  AUDIO_S8 = 32776
  AUDIO_S16LE = 32784
  AUDIO_S16BE = 36880
  AUDIO_S32LE = 32800
  AUDIO_S32BE = 36896
  AUDIO_F32LE = 33056
  AUDIO_F32BE = 37152
  AUDIO_S16 = 32784
  AUDIO_S32 = 32800
  AUDIO_F32 = 33056

  # Typedef

  typedef :int, :SDL_AudioFormat
  typedef :uint, :SDL_AudioDeviceID
  callback :SDL_AudioStreamCallback, [:pointer, :pointer, :int, :int], :void
  callback :SDL_AudioPostmixCallback, [:pointer, :pointer, :pointer, :int], :void

  # Struct

  class AudioSpec < FFI::Struct
    layout(
      :format, :int,
      :channels, :int,
      :freq, :int,
    )
  end


  # Function

  def self.setup_audio_symbols(output_error = false)
    entries = [
      [:GetNumAudioDrivers, :SDL_GetNumAudioDrivers, [], :int],
      [:GetAudioDriver, :SDL_GetAudioDriver, [:int], :pointer],
      [:GetCurrentAudioDriver, :SDL_GetCurrentAudioDriver, [], :pointer],
      [:GetAudioPlaybackDevices, :SDL_GetAudioPlaybackDevices, [:pointer], :pointer],
      [:GetAudioRecordingDevices, :SDL_GetAudioRecordingDevices, [:pointer], :pointer],
      [:GetAudioDeviceName, :SDL_GetAudioDeviceName, [:uint], :pointer],
      [:GetAudioDeviceFormat, :SDL_GetAudioDeviceFormat, [:uint, :pointer, :pointer], :bool],
      [:GetAudioDeviceChannelMap, :SDL_GetAudioDeviceChannelMap, [:uint, :pointer], :pointer],
      [:OpenAudioDevice, :SDL_OpenAudioDevice, [:uint, :pointer], :uint],
      [:IsAudioDevicePhysical, :SDL_IsAudioDevicePhysical, [:uint], :bool],
      [:IsAudioDevicePlayback, :SDL_IsAudioDevicePlayback, [:uint], :bool],
      [:PauseAudioDevice, :SDL_PauseAudioDevice, [:uint], :bool],
      [:ResumeAudioDevice, :SDL_ResumeAudioDevice, [:uint], :bool],
      [:AudioDevicePaused, :SDL_AudioDevicePaused, [:uint], :bool],
      [:GetAudioDeviceGain, :SDL_GetAudioDeviceGain, [:uint], :float],
      [:SetAudioDeviceGain, :SDL_SetAudioDeviceGain, [:uint, :float], :bool],
      [:CloseAudioDevice, :SDL_CloseAudioDevice, [:uint], :void],
      [:BindAudioStreams, :SDL_BindAudioStreams, [:uint, :pointer, :int], :bool],
      [:BindAudioStream, :SDL_BindAudioStream, [:uint, :pointer], :bool],
      [:UnbindAudioStreams, :SDL_UnbindAudioStreams, [:pointer, :int], :void],
      [:UnbindAudioStream, :SDL_UnbindAudioStream, [:pointer], :void],
      [:GetAudioStreamDevice, :SDL_GetAudioStreamDevice, [:pointer], :uint],
      [:CreateAudioStream, :SDL_CreateAudioStream, [:pointer, :pointer], :pointer],
      [:GetAudioStreamProperties, :SDL_GetAudioStreamProperties, [:pointer], :uint],
      [:GetAudioStreamFormat, :SDL_GetAudioStreamFormat, [:pointer, :pointer, :pointer], :bool],
      [:SetAudioStreamFormat, :SDL_SetAudioStreamFormat, [:pointer, :pointer, :pointer], :bool],
      [:GetAudioStreamFrequencyRatio, :SDL_GetAudioStreamFrequencyRatio, [:pointer], :float],
      [:SetAudioStreamFrequencyRatio, :SDL_SetAudioStreamFrequencyRatio, [:pointer, :float], :bool],
      [:GetAudioStreamGain, :SDL_GetAudioStreamGain, [:pointer], :float],
      [:SetAudioStreamGain, :SDL_SetAudioStreamGain, [:pointer, :float], :bool],
      [:GetAudioStreamInputChannelMap, :SDL_GetAudioStreamInputChannelMap, [:pointer, :pointer], :pointer],
      [:GetAudioStreamOutputChannelMap, :SDL_GetAudioStreamOutputChannelMap, [:pointer, :pointer], :pointer],
      [:SetAudioStreamInputChannelMap, :SDL_SetAudioStreamInputChannelMap, [:pointer, :pointer, :int], :bool],
      [:SetAudioStreamOutputChannelMap, :SDL_SetAudioStreamOutputChannelMap, [:pointer, :pointer, :int], :bool],
      [:PutAudioStreamData, :SDL_PutAudioStreamData, [:pointer, :pointer, :int], :bool],
      [:GetAudioStreamData, :SDL_GetAudioStreamData, [:pointer, :pointer, :int], :int],
      [:GetAudioStreamAvailable, :SDL_GetAudioStreamAvailable, [:pointer], :int],
      [:GetAudioStreamQueued, :SDL_GetAudioStreamQueued, [:pointer], :int],
      [:FlushAudioStream, :SDL_FlushAudioStream, [:pointer], :bool],
      [:ClearAudioStream, :SDL_ClearAudioStream, [:pointer], :bool],
      [:PauseAudioStreamDevice, :SDL_PauseAudioStreamDevice, [:pointer], :bool],
      [:ResumeAudioStreamDevice, :SDL_ResumeAudioStreamDevice, [:pointer], :bool],
      [:AudioStreamDevicePaused, :SDL_AudioStreamDevicePaused, [:pointer], :bool],
      [:LockAudioStream, :SDL_LockAudioStream, [:pointer], :bool],
      [:UnlockAudioStream, :SDL_UnlockAudioStream, [:pointer], :bool],
      [:SetAudioStreamGetCallback, :SDL_SetAudioStreamGetCallback, [:pointer, :SDL_AudioStreamCallback, :pointer], :bool],
      [:SetAudioStreamPutCallback, :SDL_SetAudioStreamPutCallback, [:pointer, :SDL_AudioStreamCallback, :pointer], :bool],
      [:DestroyAudioStream, :SDL_DestroyAudioStream, [:pointer], :void],
      [:OpenAudioDeviceStream, :SDL_OpenAudioDeviceStream, [:uint, :pointer, :SDL_AudioStreamCallback, :pointer], :pointer],
      [:SetAudioPostmixCallback, :SDL_SetAudioPostmixCallback, [:uint, :SDL_AudioPostmixCallback, :pointer], :bool],
      [:LoadWAV_IO, :SDL_LoadWAV_IO, [:pointer, :bool, :pointer, :pointer, :pointer], :bool],
      [:LoadWAV, :SDL_LoadWAV, [:pointer, :pointer, :pointer, :pointer], :bool],
      [:MixAudio, :SDL_MixAudio, [:pointer, :pointer, :int, :uint, :float], :bool],
      [:ConvertAudioSamples, :SDL_ConvertAudioSamples, [:pointer, :pointer, :int, :pointer, :pointer, :pointer], :bool],
      [:GetAudioFormatName, :SDL_GetAudioFormatName, [:int], :pointer],
      [:GetSilenceValueForFormat, :SDL_GetSilenceValueForFormat, [:int], :int],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

# TODO : def SDL_LoadWAV

