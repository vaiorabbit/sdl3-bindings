# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef

  callback :SDL_ClipboardDataCallback, [:pointer, :pointer, :pointer], :pointer
  callback :SDL_ClipboardCleanupCallback, [:pointer], :void

  # Struct


  # Function

  def self.setup_clipboard_symbols(output_error = false)
    entries = [
      [:SetClipboardText, :SDL_SetClipboardText, [:pointer], :bool],
      [:GetClipboardText, :SDL_GetClipboardText, [], :pointer],
      [:HasClipboardText, :SDL_HasClipboardText, [], :bool],
      [:SetPrimarySelectionText, :SDL_SetPrimarySelectionText, [:pointer], :bool],
      [:GetPrimarySelectionText, :SDL_GetPrimarySelectionText, [], :pointer],
      [:HasPrimarySelectionText, :SDL_HasPrimarySelectionText, [], :bool],
      [:SetClipboardData, :SDL_SetClipboardData, [:SDL_ClipboardDataCallback, :SDL_ClipboardCleanupCallback, :pointer, :pointer, :ulong_long], :bool],
      [:ClearClipboardData, :SDL_ClearClipboardData, [], :bool],
      [:GetClipboardData, :SDL_GetClipboardData, [:pointer, :pointer], :pointer],
      [:HasClipboardData, :SDL_HasClipboardData, [:pointer], :bool],
      [:GetClipboardMimeTypes, :SDL_GetClipboardMimeTypes, [:pointer], :pointer],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

