# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  PROP_FILE_DIALOG_FILTERS_POINTER = "SDL.filedialog.filters"
  PROP_FILE_DIALOG_NFILTERS_NUMBER = "SDL.filedialog.nfilters"
  PROP_FILE_DIALOG_WINDOW_POINTER = "SDL.filedialog.window"
  PROP_FILE_DIALOG_LOCATION_STRING = "SDL.filedialog.location"
  PROP_FILE_DIALOG_MANY_BOOLEAN = "SDL.filedialog.many"
  PROP_FILE_DIALOG_TITLE_STRING = "SDL.filedialog.title"
  PROP_FILE_DIALOG_ACCEPT_STRING = "SDL.filedialog.accept"
  PROP_FILE_DIALOG_CANCEL_STRING = "SDL.filedialog.cancel"

  # Enum

  FILEDIALOG_OPENFILE = 0
  FILEDIALOG_SAVEFILE = 1
  FILEDIALOG_OPENFOLDER = 2

  # Typedef

  callback :SDL_DialogFileCallback, [:pointer, :pointer, :int], :void
  typedef :int, :SDL_FileDialogType

  # Struct

  class DialogFileFilter < FFI::Struct
    layout(
      :name, :pointer,
      :pattern, :pointer,
    )
  end


  # Function

  def self.setup_dialog_symbols(output_error = false)
    entries = [
      [:ShowOpenFileDialog, :SDL_ShowOpenFileDialog, [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :int, :pointer, :bool], :void],
      [:ShowSaveFileDialog, :SDL_ShowSaveFileDialog, [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :int, :pointer], :void],
      [:ShowOpenFolderDialog, :SDL_ShowOpenFolderDialog, [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :bool], :void],
      [:ShowFileDialogWithProperties, :SDL_ShowFileDialogWithProperties, [:int, :SDL_DialogFileCallback, :pointer, :uint], :void],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

