# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  PROP_FILE_DIALOG_FILTERS_POINTER = "SDL.filedialog.filters"
  PROP_FILE_DIALOG_NFILTERS_NUMBER = "SDL.filedialog.nfilters"
  PROP_FILE_DIALOG_WINDOW_POINTER = "SDL.filedialog.window"
  PROP_FILE_DIALOG_LOCATION_STRING = "SDL.filedialog.location"
  PROP_FILE_DIALOG_MANY_BOOLEAN = "SDL.filedialog.many"
  PROP_FILE_DIALOG_TITLE_STRING = "SDL.filedialog.title"
  PROP_FILE_DIALOG_ACCEPT_STRING = "SDL.filedialog.accept"
  PROP_FILE_DIALOG_CANCEL_STRING = "SDL.filedialog.cancel"

  # Enum

  FILEDIALOG_OPENFILE = 0
  FILEDIALOG_SAVEFILE = 1
  FILEDIALOG_OPENFOLDER = 2

  # Typedef

  callback :SDL_DialogFileCallback, [:pointer, :pointer, :int], :void
  typedef :int, :SDL_FileDialogType

  # Struct

  class DialogFileFilter < FFI::Struct
    layout(
      :name, :pointer,
      :pattern, :pointer,
    )
  end


  # Function

  def self.setup_dialog_symbols(output_error = false)
    symbols = [
      :SDL_ShowOpenFileDialog,
      :SDL_ShowSaveFileDialog,
      :SDL_ShowOpenFolderDialog,
      :SDL_ShowFileDialogWithProperties,
    ]
    apis = {
      :SDL_ShowOpenFileDialog => :ShowOpenFileDialog,
      :SDL_ShowSaveFileDialog => :ShowSaveFileDialog,
      :SDL_ShowOpenFolderDialog => :ShowOpenFolderDialog,
      :SDL_ShowFileDialogWithProperties => :ShowFileDialogWithProperties,
    }
    args = {
      :SDL_ShowOpenFileDialog => [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :int, :pointer, :bool],
      :SDL_ShowSaveFileDialog => [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :int, :pointer],
      :SDL_ShowOpenFolderDialog => [:SDL_DialogFileCallback, :pointer, :pointer, :pointer, :bool],
      :SDL_ShowFileDialogWithProperties => [:int, :SDL_DialogFileCallback, :pointer, :uint],
    }
    retvals = {
      :SDL_ShowOpenFileDialog => :void,
      :SDL_ShowSaveFileDialog => :void,
      :SDL_ShowOpenFolderDialog => :void,
      :SDL_ShowFileDialogWithProperties => :void,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

