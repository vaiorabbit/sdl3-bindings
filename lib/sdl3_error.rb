# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef


  # Struct


  # Function

  def self.setup_error_symbols(output_error = false)
    entries = [
      [:SetError, :SDL_SetError, [:pointer], :bool],
      [:SetErrorV, :SDL_SetErrorV, [:pointer, :pointer], :bool],
      [:OutOfMemory, :SDL_OutOfMemory, [], :bool],
      [:GetError, :SDL_GetError, [], :pointer],
      [:ClearError, :SDL_ClearError, [], :bool],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

