# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum

  EVENT_FIRST = 0
  EVENT_QUIT = 256
  EVENT_TERMINATING = 257
  EVENT_LOW_MEMORY = 258
  EVENT_WILL_ENTER_BACKGROUND = 259
  EVENT_DID_ENTER_BACKGROUND = 260
  EVENT_WILL_ENTER_FOREGROUND = 261
  EVENT_DID_ENTER_FOREGROUND = 262
  EVENT_LOCALE_CHANGED = 263
  EVENT_SYSTEM_THEME_CHANGED = 264
  EVENT_DISPLAY_ORIENTATION = 337
  EVENT_DISPLAY_ADDED = 338
  EVENT_DISPLAY_REMOVED = 339
  EVENT_DISPLAY_MOVED = 340
  EVENT_DISPLAY_DESKTOP_MODE_CHANGED = 341
  EVENT_DISPLAY_CURRENT_MODE_CHANGED = 342
  EVENT_DISPLAY_CONTENT_SCALE_CHANGED = 343
  EVENT_DISPLAY_FIRST = 337
  EVENT_DISPLAY_LAST = 343
  EVENT_WINDOW_SHOWN = 514
  EVENT_WINDOW_HIDDEN = 515
  EVENT_WINDOW_EXPOSED = 516
  EVENT_WINDOW_MOVED = 517
  EVENT_WINDOW_RESIZED = 518
  EVENT_WINDOW_PIXEL_SIZE_CHANGED = 519
  EVENT_WINDOW_METAL_VIEW_RESIZED = 520
  EVENT_WINDOW_MINIMIZED = 521
  EVENT_WINDOW_MAXIMIZED = 522
  EVENT_WINDOW_RESTORED = 523
  EVENT_WINDOW_MOUSE_ENTER = 524
  EVENT_WINDOW_MOUSE_LEAVE = 525
  EVENT_WINDOW_FOCUS_GAINED = 526
  EVENT_WINDOW_FOCUS_LOST = 527
  EVENT_WINDOW_CLOSE_REQUESTED = 528
  EVENT_WINDOW_HIT_TEST = 529
  EVENT_WINDOW_ICCPROF_CHANGED = 530
  EVENT_WINDOW_DISPLAY_CHANGED = 531
  EVENT_WINDOW_DISPLAY_SCALE_CHANGED = 532
  EVENT_WINDOW_SAFE_AREA_CHANGED = 533
  EVENT_WINDOW_OCCLUDED = 534
  EVENT_WINDOW_ENTER_FULLSCREEN = 535
  EVENT_WINDOW_LEAVE_FULLSCREEN = 536
  EVENT_WINDOW_DESTROYED = 537
  EVENT_WINDOW_HDR_STATE_CHANGED = 538
  EVENT_WINDOW_FIRST = 514
  EVENT_WINDOW_LAST = 538
  EVENT_KEY_DOWN = 768
  EVENT_KEY_UP = 769
  EVENT_TEXT_EDITING = 770
  EVENT_TEXT_INPUT = 771
  EVENT_KEYMAP_CHANGED = 772
  EVENT_KEYBOARD_ADDED = 773
  EVENT_KEYBOARD_REMOVED = 774
  EVENT_TEXT_EDITING_CANDIDATES = 775
  EVENT_MOUSE_MOTION = 1024
  EVENT_MOUSE_BUTTON_DOWN = 1025
  EVENT_MOUSE_BUTTON_UP = 1026
  EVENT_MOUSE_WHEEL = 1027
  EVENT_MOUSE_ADDED = 1028
  EVENT_MOUSE_REMOVED = 1029
  EVENT_JOYSTICK_AXIS_MOTION = 1536
  EVENT_JOYSTICK_BALL_MOTION = 1537
  EVENT_JOYSTICK_HAT_MOTION = 1538
  EVENT_JOYSTICK_BUTTON_DOWN = 1539
  EVENT_JOYSTICK_BUTTON_UP = 1540
  EVENT_JOYSTICK_ADDED = 1541
  EVENT_JOYSTICK_REMOVED = 1542
  EVENT_JOYSTICK_BATTERY_UPDATED = 1543
  EVENT_JOYSTICK_UPDATE_COMPLETE = 1544
  EVENT_GAMEPAD_AXIS_MOTION = 1616
  EVENT_GAMEPAD_BUTTON_DOWN = 1617
  EVENT_GAMEPAD_BUTTON_UP = 1618
  EVENT_GAMEPAD_ADDED = 1619
  EVENT_GAMEPAD_REMOVED = 1620
  EVENT_GAMEPAD_REMAPPED = 1621
  EVENT_GAMEPAD_TOUCHPAD_DOWN = 1622
  EVENT_GAMEPAD_TOUCHPAD_MOTION = 1623
  EVENT_GAMEPAD_TOUCHPAD_UP = 1624
  EVENT_GAMEPAD_SENSOR_UPDATE = 1625
  EVENT_GAMEPAD_UPDATE_COMPLETE = 1626
  EVENT_GAMEPAD_STEAM_HANDLE_UPDATED = 1627
  EVENT_FINGER_DOWN = 1792
  EVENT_FINGER_UP = 1793
  EVENT_FINGER_MOTION = 1794
  EVENT_FINGER_CANCELED = 1795
  EVENT_CLIPBOARD_UPDATE = 2304
  EVENT_DROP_FILE = 4096
  EVENT_DROP_TEXT = 4097
  EVENT_DROP_BEGIN = 4098
  EVENT_DROP_COMPLETE = 4099
  EVENT_DROP_POSITION = 4100
  EVENT_AUDIO_DEVICE_ADDED = 4352
  EVENT_AUDIO_DEVICE_REMOVED = 4353
  EVENT_AUDIO_DEVICE_FORMAT_CHANGED = 4354
  EVENT_SENSOR_UPDATE = 4608
  EVENT_PEN_PROXIMITY_IN = 4864
  EVENT_PEN_PROXIMITY_OUT = 4865
  EVENT_PEN_DOWN = 4866
  EVENT_PEN_UP = 4867
  EVENT_PEN_BUTTON_DOWN = 4868
  EVENT_PEN_BUTTON_UP = 4869
  EVENT_PEN_MOTION = 4870
  EVENT_PEN_AXIS = 4871
  EVENT_CAMERA_DEVICE_ADDED = 5120
  EVENT_CAMERA_DEVICE_REMOVED = 5121
  EVENT_CAMERA_DEVICE_APPROVED = 5122
  EVENT_CAMERA_DEVICE_DENIED = 5123
  EVENT_RENDER_TARGETS_RESET = 8192
  EVENT_RENDER_DEVICE_RESET = 8193
  EVENT_RENDER_DEVICE_LOST = 8194
  EVENT_PRIVATE0 = 16384
  EVENT_PRIVATE1 = 16385
  EVENT_PRIVATE2 = 16386
  EVENT_PRIVATE3 = 16387
  EVENT_POLL_SENTINEL = 32512
  EVENT_USER = 32768
  EVENT_LAST = 65535
  EVENT_ENUM_PADDING = 2147483647
  ADDEVENT = 0
  PEEKEVENT = 1
  GETEVENT = 2

  # Typedef

  typedef :int, :SDL_EventType
  typedef :int, :SDL_EventAction
  callback :SDL_EventFilter, [:pointer, :pointer], :bool

  # Struct

  class CommonEvent < FFI::Struct
    layout(
      :type, :uint,
      :reserved, :uint,
      :timestamp, :ulong_long,
    )
  end

  class DisplayEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :displayID, :uint,
      :data1, :int,
      :data2, :int,
    )
  end

  class WindowEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :data1, :int,
      :data2, :int,
    )
  end

  class KeyboardDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
    )
  end

  class KeyboardEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :scancode, :int,
      :key, :uint,
      :mod, :ushort,
      :raw, :ushort,
      :down, :bool,
      :repeat, :bool,
    )
  end

  class TextEditingEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :text, :pointer,
      :start, :int,
      :length, :int,
    )
  end

  class TextEditingCandidatesEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :candidates, :pointer,
      :num_candidates, :int,
      :selected_candidate, :int,
      :horizontal, :bool,
      :padding1, :uchar,
      :padding2, :uchar,
      :padding3, :uchar,
    )
  end

  class TextInputEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :text, :pointer,
    )
  end

  class MouseDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
    )
  end

  class MouseMotionEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :state, :uint,
      :x, :float,
      :y, :float,
      :xrel, :float,
      :yrel, :float,
    )
  end

  class MouseButtonEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :button, :uchar,
      :down, :bool,
      :clicks, :uchar,
      :padding, :uchar,
      :x, :float,
      :y, :float,
    )
  end

  class MouseWheelEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :x, :float,
      :y, :float,
      :direction, :int,
      :mouse_x, :float,
      :mouse_y, :float,
      :integer_x, :int,
      :integer_y, :int,
    )
  end

  class JoyAxisEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :axis, :uchar,
      :padding1, :uchar,
      :padding2, :uchar,
      :padding3, :uchar,
      :value, :short,
      :padding4, :ushort,
    )
  end

  class JoyBallEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :ball, :uchar,
      :padding1, :uchar,
      :padding2, :uchar,
      :padding3, :uchar,
      :xrel, :short,
      :yrel, :short,
    )
  end

  class JoyHatEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :hat, :uchar,
      :value, :uchar,
      :padding1, :uchar,
      :padding2, :uchar,
    )
  end

  class JoyButtonEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :button, :uchar,
      :down, :bool,
      :padding1, :uchar,
      :padding2, :uchar,
    )
  end

  class JoyDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
    )
  end

  class JoyBatteryEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :state, :int,
      :percent, :int,
    )
  end

  class GamepadAxisEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :axis, :uchar,
      :padding1, :uchar,
      :padding2, :uchar,
      :padding3, :uchar,
      :value, :short,
      :padding4, :ushort,
    )
  end

  class GamepadButtonEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :button, :uchar,
      :down, :bool,
      :padding1, :uchar,
      :padding2, :uchar,
    )
  end

  class GamepadDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
    )
  end

  class GamepadTouchpadEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :touchpad, :int,
      :finger, :int,
      :x, :float,
      :y, :float,
      :pressure, :float,
    )
  end

  class GamepadSensorEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :sensor, :int,
      :data, [:float, 3],
      :sensor_timestamp, :ulong_long,
    )
  end

  class AudioDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :recording, :bool,
      :padding1, :uchar,
      :padding2, :uchar,
      :padding3, :uchar,
    )
  end

  class CameraDeviceEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
    )
  end

  class RenderEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
    )
  end

  class TouchFingerEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :touchID, :ulong_long,
      :fingerID, :ulong_long,
      :x, :float,
      :y, :float,
      :dx, :float,
      :dy, :float,
      :pressure, :float,
      :windowID, :uint,
    )
  end

  class PenProximityEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
    )
  end

  class PenMotionEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :pen_state, :uint,
      :x, :float,
      :y, :float,
    )
  end

  class PenTouchEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :pen_state, :uint,
      :x, :float,
      :y, :float,
      :eraser, :bool,
      :down, :bool,
    )
  end

  class PenButtonEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :pen_state, :uint,
      :x, :float,
      :y, :float,
      :button, :uchar,
      :down, :bool,
    )
  end

  class PenAxisEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :which, :uint,
      :pen_state, :uint,
      :x, :float,
      :y, :float,
      :axis, :int,
      :value, :float,
    )
  end

  class DropEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :x, :float,
      :y, :float,
      :source, :pointer,
      :data, :pointer,
    )
  end

  class ClipboardEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :owner, :bool,
      :num_mime_types, :int,
      :mime_types, :pointer,
    )
  end

  class SensorEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :which, :uint,
      :data, [:float, 6],
      :sensor_timestamp, :ulong_long,
    )
  end

  class QuitEvent < FFI::Struct
    layout(
      :type, :int,
      :reserved, :uint,
      :timestamp, :ulong_long,
    )
  end

  class UserEvent < FFI::Struct
    layout(
      :type, :uint,
      :reserved, :uint,
      :timestamp, :ulong_long,
      :windowID, :uint,
      :code, :int,
      :data1, :pointer,
      :data2, :pointer,
    )
  end

  class Event < FFI::Union
    layout(
      :type, :uint,
      :common, CommonEvent,
      :display, DisplayEvent,
      :window, WindowEvent,
      :kdevice, KeyboardDeviceEvent,
      :key, KeyboardEvent,
      :edit, TextEditingEvent,
      :edit_candidates, TextEditingCandidatesEvent,
      :text, TextInputEvent,
      :mdevice, MouseDeviceEvent,
      :motion, MouseMotionEvent,
      :button, MouseButtonEvent,
      :wheel, MouseWheelEvent,
      :jdevice, JoyDeviceEvent,
      :jaxis, JoyAxisEvent,
      :jball, JoyBallEvent,
      :jhat, JoyHatEvent,
      :jbutton, JoyButtonEvent,
      :jbattery, JoyBatteryEvent,
      :gdevice, GamepadDeviceEvent,
      :gaxis, GamepadAxisEvent,
      :gbutton, GamepadButtonEvent,
      :gtouchpad, GamepadTouchpadEvent,
      :gsensor, GamepadSensorEvent,
      :adevice, AudioDeviceEvent,
      :cdevice, CameraDeviceEvent,
      :sensor, SensorEvent,
      :quit, QuitEvent,
      :user, UserEvent,
      :tfinger, TouchFingerEvent,
      :pproximity, PenProximityEvent,
      :ptouch, PenTouchEvent,
      :pmotion, PenMotionEvent,
      :pbutton, PenButtonEvent,
      :paxis, PenAxisEvent,
      :render, RenderEvent,
      :drop, DropEvent,
      :clipboard, ClipboardEvent,
      :padding, [:uchar, 128],
    )
  end


  # Function

  def self.setup_events_symbols(output_error = false)
    entries = [
      [:PumpEvents, :SDL_PumpEvents, [], :void],
      [:PeepEvents, :SDL_PeepEvents, [:pointer, :int, :int, :uint, :uint], :int],
      [:HasEvent, :SDL_HasEvent, [:uint], :bool],
      [:HasEvents, :SDL_HasEvents, [:uint, :uint], :bool],
      [:FlushEvent, :SDL_FlushEvent, [:uint], :void],
      [:FlushEvents, :SDL_FlushEvents, [:uint, :uint], :void],
      [:PollEvent, :SDL_PollEvent, [:pointer], :bool],
      [:WaitEvent, :SDL_WaitEvent, [:pointer], :bool],
      [:WaitEventTimeout, :SDL_WaitEventTimeout, [:pointer, :int], :bool],
      [:PushEvent, :SDL_PushEvent, [:pointer], :bool],
      [:SetEventFilter, :SDL_SetEventFilter, [:SDL_EventFilter, :pointer], :void],
      [:GetEventFilter, :SDL_GetEventFilter, [:pointer, :pointer], :bool],
      [:AddEventWatch, :SDL_AddEventWatch, [:SDL_EventFilter, :pointer], :bool],
      [:RemoveEventWatch, :SDL_RemoveEventWatch, [:SDL_EventFilter, :pointer], :void],
      [:FilterEvents, :SDL_FilterEvents, [:SDL_EventFilter, :pointer], :void],
      [:SetEventEnabled, :SDL_SetEventEnabled, [:uint, :bool], :void],
      [:EventEnabled, :SDL_EventEnabled, [:uint], :bool],
      [:RegisterEvents, :SDL_RegisterEvents, [:int], :uint],
      [:GetWindowFromEvent, :SDL_GetWindowFromEvent, [:pointer], :pointer],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

