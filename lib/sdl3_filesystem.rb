# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  GLOB_CASEINSENSITIVE = 1 << 0

  # Enum

  FOLDER_HOME = 0
  FOLDER_DESKTOP = 1
  FOLDER_DOCUMENTS = 2
  FOLDER_DOWNLOADS = 3
  FOLDER_MUSIC = 4
  FOLDER_PICTURES = 5
  FOLDER_PUBLICSHARE = 6
  FOLDER_SAVEDGAMES = 7
  FOLDER_SCREENSHOTS = 8
  FOLDER_TEMPLATES = 9
  FOLDER_VIDEOS = 10
  FOLDER_COUNT = 11
  PATHTYPE_NONE = 0
  PATHTYPE_FILE = 1
  PATHTYPE_DIRECTORY = 2
  PATHTYPE_OTHER = 3
  ENUM_CONTINUE = 0
  ENUM_SUCCESS = 1
  ENUM_FAILURE = 2

  # Typedef

  typedef :int, :SDL_Folder
  typedef :int, :SDL_PathType
  typedef :uint, :SDL_GlobFlags
  typedef :int, :SDL_EnumerationResult
  callback :SDL_EnumerateDirectoryCallback, [:pointer, :pointer, :pointer], :int

  # Struct

  class PathInfo < FFI::Struct
    layout(
      :type, :int,
      :size, :ulong_long,
      :create_time, :long_long,
      :modify_time, :long_long,
      :access_time, :long_long,
    )
  end


  # Function

  def self.setup_filesystem_symbols(output_error = false)
    symbols = [
      :SDL_GetBasePath,
      :SDL_GetPrefPath,
      :SDL_GetUserFolder,
      :SDL_CreateDirectory,
      :SDL_EnumerateDirectory,
      :SDL_RemovePath,
      :SDL_RenamePath,
      :SDL_CopyFile,
      :SDL_GetPathInfo,
      :SDL_GlobDirectory,
      :SDL_GetCurrentDirectory,
    ]
    apis = {
      :SDL_GetBasePath => :GetBasePath,
      :SDL_GetPrefPath => :GetPrefPath,
      :SDL_GetUserFolder => :GetUserFolder,
      :SDL_CreateDirectory => :CreateDirectory,
      :SDL_EnumerateDirectory => :EnumerateDirectory,
      :SDL_RemovePath => :RemovePath,
      :SDL_RenamePath => :RenamePath,
      :SDL_CopyFile => :CopyFile,
      :SDL_GetPathInfo => :GetPathInfo,
      :SDL_GlobDirectory => :GlobDirectory,
      :SDL_GetCurrentDirectory => :GetCurrentDirectory,
    }
    args = {
      :SDL_GetBasePath => [],
      :SDL_GetPrefPath => [:pointer, :pointer],
      :SDL_GetUserFolder => [:int],
      :SDL_CreateDirectory => [:pointer],
      :SDL_EnumerateDirectory => [:pointer, :SDL_EnumerateDirectoryCallback, :pointer],
      :SDL_RemovePath => [:pointer],
      :SDL_RenamePath => [:pointer, :pointer],
      :SDL_CopyFile => [:pointer, :pointer],
      :SDL_GetPathInfo => [:pointer, :pointer],
      :SDL_GlobDirectory => [:pointer, :pointer, :uint, :pointer],
      :SDL_GetCurrentDirectory => [],
    }
    retvals = {
      :SDL_GetBasePath => :pointer,
      :SDL_GetPrefPath => :pointer,
      :SDL_GetUserFolder => :pointer,
      :SDL_CreateDirectory => :bool,
      :SDL_EnumerateDirectory => :bool,
      :SDL_RemovePath => :bool,
      :SDL_RenamePath => :bool,
      :SDL_CopyFile => :bool,
      :SDL_GetPathInfo => :bool,
      :SDL_GlobDirectory => :pointer,
      :SDL_GetCurrentDirectory => :pointer,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

