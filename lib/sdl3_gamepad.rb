# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'
require_relative 'sdl3_joystick'

module SDL
  extend FFI::Library
  # Define/Macro


  # Enum

  GAMEPAD_TYPE_UNKNOWN = 0
  GAMEPAD_TYPE_STANDARD = 1
  GAMEPAD_TYPE_XBOX360 = 2
  GAMEPAD_TYPE_XBOXONE = 3
  GAMEPAD_TYPE_PS3 = 4
  GAMEPAD_TYPE_PS4 = 5
  GAMEPAD_TYPE_PS5 = 6
  GAMEPAD_TYPE_NINTENDO_SWITCH_PRO = 7
  GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT = 8
  GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT = 9
  GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR = 10
  GAMEPAD_TYPE_COUNT = 11
  GAMEPAD_BUTTON_INVALID = -1
  GAMEPAD_BUTTON_SOUTH = 0
  GAMEPAD_BUTTON_EAST = 1
  GAMEPAD_BUTTON_WEST = 2
  GAMEPAD_BUTTON_NORTH = 3
  GAMEPAD_BUTTON_BACK = 4
  GAMEPAD_BUTTON_GUIDE = 5
  GAMEPAD_BUTTON_START = 6
  GAMEPAD_BUTTON_LEFT_STICK = 7
  GAMEPAD_BUTTON_RIGHT_STICK = 8
  GAMEPAD_BUTTON_LEFT_SHOULDER = 9
  GAMEPAD_BUTTON_RIGHT_SHOULDER = 10
  GAMEPAD_BUTTON_DPAD_UP = 11
  GAMEPAD_BUTTON_DPAD_DOWN = 12
  GAMEPAD_BUTTON_DPAD_LEFT = 13
  GAMEPAD_BUTTON_DPAD_RIGHT = 14
  GAMEPAD_BUTTON_MISC1 = 15
  GAMEPAD_BUTTON_RIGHT_PADDLE1 = 16
  GAMEPAD_BUTTON_LEFT_PADDLE1 = 17
  GAMEPAD_BUTTON_RIGHT_PADDLE2 = 18
  GAMEPAD_BUTTON_LEFT_PADDLE2 = 19
  GAMEPAD_BUTTON_TOUCHPAD = 20
  GAMEPAD_BUTTON_MISC2 = 21
  GAMEPAD_BUTTON_MISC3 = 22
  GAMEPAD_BUTTON_MISC4 = 23
  GAMEPAD_BUTTON_MISC5 = 24
  GAMEPAD_BUTTON_MISC6 = 25
  GAMEPAD_BUTTON_COUNT = 26
  GAMEPAD_BUTTON_LABEL_UNKNOWN = 0
  GAMEPAD_BUTTON_LABEL_A = 1
  GAMEPAD_BUTTON_LABEL_B = 2
  GAMEPAD_BUTTON_LABEL_X = 3
  GAMEPAD_BUTTON_LABEL_Y = 4
  GAMEPAD_BUTTON_LABEL_CROSS = 5
  GAMEPAD_BUTTON_LABEL_CIRCLE = 6
  GAMEPAD_BUTTON_LABEL_SQUARE = 7
  GAMEPAD_BUTTON_LABEL_TRIANGLE = 8
  GAMEPAD_AXIS_INVALID = -1
  GAMEPAD_AXIS_LEFTX = 0
  GAMEPAD_AXIS_LEFTY = 1
  GAMEPAD_AXIS_RIGHTX = 2
  GAMEPAD_AXIS_RIGHTY = 3
  GAMEPAD_AXIS_LEFT_TRIGGER = 4
  GAMEPAD_AXIS_RIGHT_TRIGGER = 5
  GAMEPAD_AXIS_COUNT = 6
  GAMEPAD_BINDTYPE_NONE = 0
  GAMEPAD_BINDTYPE_BUTTON = 1
  GAMEPAD_BINDTYPE_AXIS = 2
  GAMEPAD_BINDTYPE_HAT = 3

  # Typedef


  class GamepadBinding_value_axis < FFI::Struct
    layout(
        :axis, :int,
        :axis_min, :int,
        :axis_max, :int,
    )
  end

  class GamepadBinding_value_hat < FFI::Struct
    layout(
        :hat, :int,
        :hat_mask, :int,
    )
  end

  class GamepadBinding_input < FFI::Struct
    layout(
        :button, :int,
        :axis, GamepadBinding_value_axis,
        :hat, GamepadBinding_value_hat,
    )
  end

  class GamepadBinding_output < FFI::Struct
    layout(
        :button, :int,
        :axis, GamepadBinding_value_axis,
    )
  end

  class GamepadBinding < FFI::Struct
    layout(
        :input_type, :int,
        :input, GamepadBinding_input,
        :output_type, :int,
        :output, GamepadBinding_output,
    )
  end

  typedef :int, :SDL_GamepadType
  typedef :int, :SDL_GamepadButton
  typedef :int, :SDL_GamepadButtonLabel
  typedef :int, :SDL_GamepadAxis
  typedef :int, :SDL_GamepadBindingType

  # Struct


  # Function

  def self.setup_gamepad_symbols(output_error = false)
    entries = [
      [:AddGamepadMapping, :SDL_AddGamepadMapping, [:pointer], :int],
      [:AddGamepadMappingsFromIO, :SDL_AddGamepadMappingsFromIO, [:pointer, :bool], :int],
      [:AddGamepadMappingsFromFile, :SDL_AddGamepadMappingsFromFile, [:pointer], :int],
      [:ReloadGamepadMappings, :SDL_ReloadGamepadMappings, [], :bool],
      [:GetGamepadMappings, :SDL_GetGamepadMappings, [:pointer], :pointer],
      [:GetGamepadMappingForGUID, :SDL_GetGamepadMappingForGUID, [GUID.by_value], :pointer],
      [:GetGamepadMapping, :SDL_GetGamepadMapping, [:pointer], :pointer],
      [:SetGamepadMapping, :SDL_SetGamepadMapping, [:uint, :pointer], :bool],
      [:HasGamepad, :SDL_HasGamepad, [], :bool],
      [:GetGamepads, :SDL_GetGamepads, [:pointer], :pointer],
      [:IsGamepad, :SDL_IsGamepad, [:uint], :bool],
      [:GetGamepadNameForID, :SDL_GetGamepadNameForID, [:uint], :pointer],
      [:GetGamepadPathForID, :SDL_GetGamepadPathForID, [:uint], :pointer],
      [:GetGamepadPlayerIndexForID, :SDL_GetGamepadPlayerIndexForID, [:uint], :int],
      [:GetGamepadGUIDForID, :SDL_GetGamepadGUIDForID, [:uint], GUID.by_value],
      [:GetGamepadVendorForID, :SDL_GetGamepadVendorForID, [:uint], :ushort],
      [:GetGamepadProductForID, :SDL_GetGamepadProductForID, [:uint], :ushort],
      [:GetGamepadProductVersionForID, :SDL_GetGamepadProductVersionForID, [:uint], :ushort],
      [:GetGamepadTypeForID, :SDL_GetGamepadTypeForID, [:uint], :int],
      [:GetRealGamepadTypeForID, :SDL_GetRealGamepadTypeForID, [:uint], :int],
      [:GetGamepadMappingForID, :SDL_GetGamepadMappingForID, [:uint], :pointer],
      [:OpenGamepad, :SDL_OpenGamepad, [:uint], :pointer],
      [:GetGamepadFromID, :SDL_GetGamepadFromID, [:uint], :pointer],
      [:GetGamepadFromPlayerIndex, :SDL_GetGamepadFromPlayerIndex, [:int], :pointer],
      [:GetGamepadProperties, :SDL_GetGamepadProperties, [:pointer], :uint],
      [:GetGamepadID, :SDL_GetGamepadID, [:pointer], :uint],
      [:GetGamepadName, :SDL_GetGamepadName, [:pointer], :pointer],
      [:GetGamepadPath, :SDL_GetGamepadPath, [:pointer], :pointer],
      [:GetGamepadType, :SDL_GetGamepadType, [:pointer], :int],
      [:GetRealGamepadType, :SDL_GetRealGamepadType, [:pointer], :int],
      [:GetGamepadPlayerIndex, :SDL_GetGamepadPlayerIndex, [:pointer], :int],
      [:SetGamepadPlayerIndex, :SDL_SetGamepadPlayerIndex, [:pointer, :int], :bool],
      [:GetGamepadVendor, :SDL_GetGamepadVendor, [:pointer], :ushort],
      [:GetGamepadProduct, :SDL_GetGamepadProduct, [:pointer], :ushort],
      [:GetGamepadProductVersion, :SDL_GetGamepadProductVersion, [:pointer], :ushort],
      [:GetGamepadFirmwareVersion, :SDL_GetGamepadFirmwareVersion, [:pointer], :ushort],
      [:GetGamepadSerial, :SDL_GetGamepadSerial, [:pointer], :pointer],
      [:GetGamepadSteamHandle, :SDL_GetGamepadSteamHandle, [:pointer], :ulong_long],
      [:GetGamepadConnectionState, :SDL_GetGamepadConnectionState, [:pointer], :int],
      [:GetGamepadPowerInfo, :SDL_GetGamepadPowerInfo, [:pointer, :pointer], :int],
      [:GamepadConnected, :SDL_GamepadConnected, [:pointer], :bool],
      [:GetGamepadJoystick, :SDL_GetGamepadJoystick, [:pointer], :pointer],
      [:SetGamepadEventsEnabled, :SDL_SetGamepadEventsEnabled, [:bool], :void],
      [:GamepadEventsEnabled, :SDL_GamepadEventsEnabled, [], :bool],
      [:GetGamepadBindings, :SDL_GetGamepadBindings, [:pointer, :pointer], :pointer],
      [:UpdateGamepads, :SDL_UpdateGamepads, [], :void],
      [:GetGamepadTypeFromString, :SDL_GetGamepadTypeFromString, [:pointer], :int],
      [:GetGamepadStringForType, :SDL_GetGamepadStringForType, [:int], :pointer],
      [:GetGamepadAxisFromString, :SDL_GetGamepadAxisFromString, [:pointer], :int],
      [:GetGamepadStringForAxis, :SDL_GetGamepadStringForAxis, [:int], :pointer],
      [:GamepadHasAxis, :SDL_GamepadHasAxis, [:pointer, :int], :bool],
      [:GetGamepadAxis, :SDL_GetGamepadAxis, [:pointer, :int], :short],
      [:GetGamepadButtonFromString, :SDL_GetGamepadButtonFromString, [:pointer], :int],
      [:GetGamepadStringForButton, :SDL_GetGamepadStringForButton, [:int], :pointer],
      [:GamepadHasButton, :SDL_GamepadHasButton, [:pointer, :int], :bool],
      [:GetGamepadButton, :SDL_GetGamepadButton, [:pointer, :int], :bool],
      [:GetGamepadButtonLabelForType, :SDL_GetGamepadButtonLabelForType, [:int, :int], :int],
      [:GetGamepadButtonLabel, :SDL_GetGamepadButtonLabel, [:pointer, :int], :int],
      [:GetNumGamepadTouchpads, :SDL_GetNumGamepadTouchpads, [:pointer], :int],
      [:GetNumGamepadTouchpadFingers, :SDL_GetNumGamepadTouchpadFingers, [:pointer, :int], :int],
      [:GetGamepadTouchpadFinger, :SDL_GetGamepadTouchpadFinger, [:pointer, :int, :int, :pointer, :pointer, :pointer, :pointer], :bool],
      [:GamepadHasSensor, :SDL_GamepadHasSensor, [:pointer, :int], :bool],
      [:SetGamepadSensorEnabled, :SDL_SetGamepadSensorEnabled, [:pointer, :int, :bool], :bool],
      [:GamepadSensorEnabled, :SDL_GamepadSensorEnabled, [:pointer, :int], :bool],
      [:GetGamepadSensorDataRate, :SDL_GetGamepadSensorDataRate, [:pointer, :int], :float],
      [:GetGamepadSensorData, :SDL_GetGamepadSensorData, [:pointer, :int, :pointer, :int], :bool],
      [:RumbleGamepad, :SDL_RumbleGamepad, [:pointer, :ushort, :ushort, :uint], :bool],
      [:RumbleGamepadTriggers, :SDL_RumbleGamepadTriggers, [:pointer, :ushort, :ushort, :uint], :bool],
      [:SetGamepadLED, :SDL_SetGamepadLED, [:pointer, :uchar, :uchar, :uchar], :bool],
      [:SendGamepadEffect, :SDL_SendGamepadEffect, [:pointer, :pointer, :int], :bool],
      [:CloseGamepad, :SDL_CloseGamepad, [:pointer], :void],
      [:GetGamepadAppleSFSymbolsNameForButton, :SDL_GetGamepadAppleSFSymbolsNameForButton, [:pointer, :int], :pointer],
      [:GetGamepadAppleSFSymbolsNameForAxis, :SDL_GetGamepadAppleSFSymbolsNameForAxis, [:pointer, :int], :pointer],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

