# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  IMAGE_MAJOR_VERSION = 3
  IMAGE_MINOR_VERSION = 2
  IMAGE_MICRO_VERSION = 4

  # Enum


  # Typedef


  # Struct

  class IMG_Animation < FFI::Struct
    layout(
      :w, :int,
      :h, :int,
      :count, :int,
      :frames, :pointer,
      :delays, :pointer,
    )
  end


  # Function

  def self.setup_image_symbols(output_error = false)
    entries = [
      [:IMG_Version, :IMG_Version, [], :int],
      [:IMG_LoadTyped_IO, :IMG_LoadTyped_IO, [:pointer, :bool, :pointer], :pointer],
      [:IMG_Load, :IMG_Load, [:pointer], :pointer],
      [:IMG_Load_IO, :IMG_Load_IO, [:pointer, :bool], :pointer],
      [:IMG_LoadTexture, :IMG_LoadTexture, [:pointer, :pointer], :pointer],
      [:IMG_LoadTexture_IO, :IMG_LoadTexture_IO, [:pointer, :pointer, :bool], :pointer],
      [:IMG_LoadTextureTyped_IO, :IMG_LoadTextureTyped_IO, [:pointer, :pointer, :bool, :pointer], :pointer],
      [:IMG_isAVIF, :IMG_isAVIF, [:pointer], :bool],
      [:IMG_isICO, :IMG_isICO, [:pointer], :bool],
      [:IMG_isCUR, :IMG_isCUR, [:pointer], :bool],
      [:IMG_isBMP, :IMG_isBMP, [:pointer], :bool],
      [:IMG_isGIF, :IMG_isGIF, [:pointer], :bool],
      [:IMG_isJPG, :IMG_isJPG, [:pointer], :bool],
      [:IMG_isJXL, :IMG_isJXL, [:pointer], :bool],
      [:IMG_isLBM, :IMG_isLBM, [:pointer], :bool],
      [:IMG_isPCX, :IMG_isPCX, [:pointer], :bool],
      [:IMG_isPNG, :IMG_isPNG, [:pointer], :bool],
      [:IMG_isPNM, :IMG_isPNM, [:pointer], :bool],
      [:IMG_isSVG, :IMG_isSVG, [:pointer], :bool],
      [:IMG_isQOI, :IMG_isQOI, [:pointer], :bool],
      [:IMG_isTIF, :IMG_isTIF, [:pointer], :bool],
      [:IMG_isXCF, :IMG_isXCF, [:pointer], :bool],
      [:IMG_isXPM, :IMG_isXPM, [:pointer], :bool],
      [:IMG_isXV, :IMG_isXV, [:pointer], :bool],
      [:IMG_isWEBP, :IMG_isWEBP, [:pointer], :bool],
      [:IMG_LoadAVIF_IO, :IMG_LoadAVIF_IO, [:pointer], :pointer],
      [:IMG_LoadICO_IO, :IMG_LoadICO_IO, [:pointer], :pointer],
      [:IMG_LoadCUR_IO, :IMG_LoadCUR_IO, [:pointer], :pointer],
      [:IMG_LoadBMP_IO, :IMG_LoadBMP_IO, [:pointer], :pointer],
      [:IMG_LoadGIF_IO, :IMG_LoadGIF_IO, [:pointer], :pointer],
      [:IMG_LoadJPG_IO, :IMG_LoadJPG_IO, [:pointer], :pointer],
      [:IMG_LoadJXL_IO, :IMG_LoadJXL_IO, [:pointer], :pointer],
      [:IMG_LoadLBM_IO, :IMG_LoadLBM_IO, [:pointer], :pointer],
      [:IMG_LoadPCX_IO, :IMG_LoadPCX_IO, [:pointer], :pointer],
      [:IMG_LoadPNG_IO, :IMG_LoadPNG_IO, [:pointer], :pointer],
      [:IMG_LoadPNM_IO, :IMG_LoadPNM_IO, [:pointer], :pointer],
      [:IMG_LoadSVG_IO, :IMG_LoadSVG_IO, [:pointer], :pointer],
      [:IMG_LoadQOI_IO, :IMG_LoadQOI_IO, [:pointer], :pointer],
      [:IMG_LoadTGA_IO, :IMG_LoadTGA_IO, [:pointer], :pointer],
      [:IMG_LoadTIF_IO, :IMG_LoadTIF_IO, [:pointer], :pointer],
      [:IMG_LoadXCF_IO, :IMG_LoadXCF_IO, [:pointer], :pointer],
      [:IMG_LoadXPM_IO, :IMG_LoadXPM_IO, [:pointer], :pointer],
      [:IMG_LoadXV_IO, :IMG_LoadXV_IO, [:pointer], :pointer],
      [:IMG_LoadWEBP_IO, :IMG_LoadWEBP_IO, [:pointer], :pointer],
      [:IMG_LoadSizedSVG_IO, :IMG_LoadSizedSVG_IO, [:pointer, :int, :int], :pointer],
      [:IMG_ReadXPMFromArray, :IMG_ReadXPMFromArray, [:pointer], :pointer],
      [:IMG_ReadXPMFromArrayToRGB888, :IMG_ReadXPMFromArrayToRGB888, [:pointer], :pointer],
      [:IMG_SaveAVIF, :IMG_SaveAVIF, [:pointer, :pointer, :int], :bool],
      [:IMG_SaveAVIF_IO, :IMG_SaveAVIF_IO, [:pointer, :pointer, :bool, :int], :bool],
      [:IMG_SavePNG, :IMG_SavePNG, [:pointer, :pointer], :bool],
      [:IMG_SavePNG_IO, :IMG_SavePNG_IO, [:pointer, :pointer, :bool], :bool],
      [:IMG_SaveJPG, :IMG_SaveJPG, [:pointer, :pointer, :int], :bool],
      [:IMG_SaveJPG_IO, :IMG_SaveJPG_IO, [:pointer, :pointer, :bool, :int], :bool],
      [:IMG_LoadAnimation, :IMG_LoadAnimation, [:pointer], :pointer],
      [:IMG_LoadAnimation_IO, :IMG_LoadAnimation_IO, [:pointer, :bool], :pointer],
      [:IMG_LoadAnimationTyped_IO, :IMG_LoadAnimationTyped_IO, [:pointer, :bool, :pointer], :pointer],
      [:IMG_FreeAnimation, :IMG_FreeAnimation, [:pointer], :void],
      [:IMG_LoadGIFAnimation_IO, :IMG_LoadGIFAnimation_IO, [:pointer], :pointer],
      [:IMG_LoadWEBPAnimation_IO, :IMG_LoadWEBPAnimation_IO, [:pointer], :pointer],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

