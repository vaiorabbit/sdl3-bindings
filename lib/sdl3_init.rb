# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  INIT_AUDIO = 0x00000010
  INIT_VIDEO = 0x00000020
  INIT_JOYSTICK = 0x00000200
  INIT_HAPTIC = 0x00001000
  INIT_GAMEPAD = 0x00002000
  INIT_EVENTS = 0x00004000
  INIT_SENSOR = 0x00008000
  INIT_CAMERA = 0x00010000
  PROP_APP_METADATA_NAME_STRING = "SDL.app.metadata.name"
  PROP_APP_METADATA_VERSION_STRING = "SDL.app.metadata.version"
  PROP_APP_METADATA_IDENTIFIER_STRING = "SDL.app.metadata.identifier"
  PROP_APP_METADATA_CREATOR_STRING = "SDL.app.metadata.creator"
  PROP_APP_METADATA_COPYRIGHT_STRING = "SDL.app.metadata.copyright"
  PROP_APP_METADATA_URL_STRING = "SDL.app.metadata.url"
  PROP_APP_METADATA_TYPE_STRING = "SDL.app.metadata.type"

  # Enum

  APP_CONTINUE = 0
  APP_SUCCESS = 1
  APP_FAILURE = 2

  # Typedef

  typedef :uint, :SDL_InitFlags
  typedef :int, :SDL_AppResult
  callback :SDL_AppInit_func, [:pointer, :int, :pointer], :int
  callback :SDL_AppIterate_func, [:pointer], :int
  callback :SDL_AppEvent_func, [:pointer, :pointer], :int
  callback :SDL_AppQuit_func, [:pointer, :int], :void
  callback :SDL_MainThreadCallback, [:pointer], :void

  # Struct


  # Function

  def self.setup_init_symbols(output_error = false)
    symbols = [
      :SDL_Init,
      :SDL_InitSubSystem,
      :SDL_QuitSubSystem,
      :SDL_WasInit,
      :SDL_Quit,
      :SDL_IsMainThread,
      :SDL_RunOnMainThread,
      :SDL_SetAppMetadata,
      :SDL_SetAppMetadataProperty,
      :SDL_GetAppMetadataProperty,
    ]
    apis = {
      :SDL_Init => :Init,
      :SDL_InitSubSystem => :InitSubSystem,
      :SDL_QuitSubSystem => :QuitSubSystem,
      :SDL_WasInit => :WasInit,
      :SDL_Quit => :Quit,
      :SDL_IsMainThread => :IsMainThread,
      :SDL_RunOnMainThread => :RunOnMainThread,
      :SDL_SetAppMetadata => :SetAppMetadata,
      :SDL_SetAppMetadataProperty => :SetAppMetadataProperty,
      :SDL_GetAppMetadataProperty => :GetAppMetadataProperty,
    }
    args = {
      :SDL_Init => [:uint],
      :SDL_InitSubSystem => [:uint],
      :SDL_QuitSubSystem => [:uint],
      :SDL_WasInit => [:uint],
      :SDL_Quit => [],
      :SDL_IsMainThread => [],
      :SDL_RunOnMainThread => [:SDL_MainThreadCallback, :pointer, :bool],
      :SDL_SetAppMetadata => [:pointer, :pointer, :pointer],
      :SDL_SetAppMetadataProperty => [:pointer, :pointer],
      :SDL_GetAppMetadataProperty => [:pointer],
    }
    retvals = {
      :SDL_Init => :bool,
      :SDL_InitSubSystem => :bool,
      :SDL_QuitSubSystem => :void,
      :SDL_WasInit => :uint,
      :SDL_Quit => :void,
      :SDL_IsMainThread => :bool,
      :SDL_RunOnMainThread => :bool,
      :SDL_SetAppMetadata => :bool,
      :SDL_SetAppMetadataProperty => :bool,
      :SDL_GetAppMetadataProperty => :pointer,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

