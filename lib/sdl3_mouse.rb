# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  BUTTON_LEFT = 1
  BUTTON_MIDDLE = 2
  BUTTON_RIGHT = 3
  BUTTON_X1 = 4
  BUTTON_X2 = 5

  # Enum

  SYSTEM_CURSOR_DEFAULT = 0
  SYSTEM_CURSOR_TEXT = 1
  SYSTEM_CURSOR_WAIT = 2
  SYSTEM_CURSOR_CROSSHAIR = 3
  SYSTEM_CURSOR_PROGRESS = 4
  SYSTEM_CURSOR_NWSE_RESIZE = 5
  SYSTEM_CURSOR_NESW_RESIZE = 6
  SYSTEM_CURSOR_EW_RESIZE = 7
  SYSTEM_CURSOR_NS_RESIZE = 8
  SYSTEM_CURSOR_MOVE = 9
  SYSTEM_CURSOR_NOT_ALLOWED = 10
  SYSTEM_CURSOR_POINTER = 11
  SYSTEM_CURSOR_NW_RESIZE = 12
  SYSTEM_CURSOR_N_RESIZE = 13
  SYSTEM_CURSOR_NE_RESIZE = 14
  SYSTEM_CURSOR_E_RESIZE = 15
  SYSTEM_CURSOR_SE_RESIZE = 16
  SYSTEM_CURSOR_S_RESIZE = 17
  SYSTEM_CURSOR_SW_RESIZE = 18
  SYSTEM_CURSOR_W_RESIZE = 19
  SYSTEM_CURSOR_COUNT = 20
  MOUSEWHEEL_NORMAL = 0
  MOUSEWHEEL_FLIPPED = 1

  # Typedef

  typedef :uint, :SDL_MouseID
  typedef :int, :SDL_SystemCursor
  typedef :int, :SDL_MouseWheelDirection
  typedef :uint, :SDL_MouseButtonFlags

  # Struct


  # Function

  def self.setup_mouse_symbols(output_error = false)
    entries = [
      [:HasMouse, :SDL_HasMouse, [], :bool],
      [:GetMice, :SDL_GetMice, [:pointer], :pointer],
      [:GetMouseNameForID, :SDL_GetMouseNameForID, [:uint], :pointer],
      [:GetMouseFocus, :SDL_GetMouseFocus, [], :pointer],
      [:GetMouseState, :SDL_GetMouseState, [:pointer, :pointer], :uint],
      [:GetGlobalMouseState, :SDL_GetGlobalMouseState, [:pointer, :pointer], :uint],
      [:GetRelativeMouseState, :SDL_GetRelativeMouseState, [:pointer, :pointer], :uint],
      [:WarpMouseInWindow, :SDL_WarpMouseInWindow, [:pointer, :float, :float], :void],
      [:WarpMouseGlobal, :SDL_WarpMouseGlobal, [:float, :float], :bool],
      [:SetWindowRelativeMouseMode, :SDL_SetWindowRelativeMouseMode, [:pointer, :bool], :bool],
      [:GetWindowRelativeMouseMode, :SDL_GetWindowRelativeMouseMode, [:pointer], :bool],
      [:CaptureMouse, :SDL_CaptureMouse, [:bool], :bool],
      [:CreateCursor, :SDL_CreateCursor, [:pointer, :pointer, :int, :int, :int, :int], :pointer],
      [:CreateColorCursor, :SDL_CreateColorCursor, [:pointer, :int, :int], :pointer],
      [:CreateSystemCursor, :SDL_CreateSystemCursor, [:int], :pointer],
      [:SetCursor, :SDL_SetCursor, [:pointer], :bool],
      [:GetCursor, :SDL_GetCursor, [], :pointer],
      [:GetDefaultCursor, :SDL_GetDefaultCursor, [], :pointer],
      [:DestroyCursor, :SDL_DestroyCursor, [:pointer], :void],
      [:ShowCursor, :SDL_ShowCursor, [], :bool],
      [:HideCursor, :SDL_HideCursor, [], :bool],
      [:CursorVisible, :SDL_CursorVisible, [], :bool],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

