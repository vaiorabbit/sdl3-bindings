# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  SOFTWARE_RENDERER = "software"
  PROP_RENDERER_CREATE_NAME_STRING = "SDL.renderer.create.name"
  PROP_RENDERER_CREATE_WINDOW_POINTER = "SDL.renderer.create.window"
  PROP_RENDERER_CREATE_SURFACE_POINTER = "SDL.renderer.create.surface"
  PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER = "SDL.renderer.create.output_colorspace"
  PROP_RENDERER_CREATE_PRESENT_VSYNC_NUMBER = "SDL.renderer.create.present_vsync"
  PROP_RENDERER_CREATE_VULKAN_INSTANCE_POINTER = "SDL.renderer.create.vulkan.instance"
  PROP_RENDERER_CREATE_VULKAN_SURFACE_NUMBER = "SDL.renderer.create.vulkan.surface"
  PROP_RENDERER_CREATE_VULKAN_PHYSICAL_DEVICE_POINTER = "SDL.renderer.create.vulkan.physical_device"
  PROP_RENDERER_CREATE_VULKAN_DEVICE_POINTER = "SDL.renderer.create.vulkan.device"
  PROP_RENDERER_CREATE_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER = "SDL.renderer.create.vulkan.graphics_queue_family_index"
  PROP_RENDERER_CREATE_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER = "SDL.renderer.create.vulkan.present_queue_family_index"
  PROP_RENDERER_NAME_STRING = "SDL.renderer.name"
  PROP_RENDERER_WINDOW_POINTER = "SDL.renderer.window"
  PROP_RENDERER_SURFACE_POINTER = "SDL.renderer.surface"
  PROP_RENDERER_VSYNC_NUMBER = "SDL.renderer.vsync"
  PROP_RENDERER_MAX_TEXTURE_SIZE_NUMBER = "SDL.renderer.max_texture_size"
  PROP_RENDERER_TEXTURE_FORMATS_POINTER = "SDL.renderer.texture_formats"
  PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER = "SDL.renderer.output_colorspace"
  PROP_RENDERER_HDR_ENABLED_BOOLEAN = "SDL.renderer.HDR_enabled"
  PROP_RENDERER_SDR_WHITE_POINT_FLOAT = "SDL.renderer.SDR_white_point"
  PROP_RENDERER_HDR_HEADROOM_FLOAT = "SDL.renderer.HDR_headroom"
  PROP_RENDERER_D3D9_DEVICE_POINTER = "SDL.renderer.d3d9.device"
  PROP_RENDERER_D3D11_DEVICE_POINTER = "SDL.renderer.d3d11.device"
  PROP_RENDERER_D3D11_SWAPCHAIN_POINTER = "SDL.renderer.d3d11.swap_chain"
  PROP_RENDERER_D3D12_DEVICE_POINTER = "SDL.renderer.d3d12.device"
  PROP_RENDERER_D3D12_SWAPCHAIN_POINTER = "SDL.renderer.d3d12.swap_chain"
  PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER = "SDL.renderer.d3d12.command_queue"
  PROP_RENDERER_VULKAN_INSTANCE_POINTER = "SDL.renderer.vulkan.instance"
  PROP_RENDERER_VULKAN_SURFACE_NUMBER = "SDL.renderer.vulkan.surface"
  PROP_RENDERER_VULKAN_PHYSICAL_DEVICE_POINTER = "SDL.renderer.vulkan.physical_device"
  PROP_RENDERER_VULKAN_DEVICE_POINTER = "SDL.renderer.vulkan.device"
  PROP_RENDERER_VULKAN_GRAPHICS_QUEUE_FAMILY_INDEX_NUMBER = "SDL.renderer.vulkan.graphics_queue_family_index"
  PROP_RENDERER_VULKAN_PRESENT_QUEUE_FAMILY_INDEX_NUMBER = "SDL.renderer.vulkan.present_queue_family_index"
  PROP_RENDERER_VULKAN_SWAPCHAIN_IMAGE_COUNT_NUMBER = "SDL.renderer.vulkan.swapchain_image_count"
  PROP_RENDERER_GPU_DEVICE_POINTER = "SDL.renderer.gpu.device"
  PROP_TEXTURE_CREATE_COLORSPACE_NUMBER = "SDL.texture.create.colorspace"
  PROP_TEXTURE_CREATE_FORMAT_NUMBER = "SDL.texture.create.format"
  PROP_TEXTURE_CREATE_ACCESS_NUMBER = "SDL.texture.create.access"
  PROP_TEXTURE_CREATE_WIDTH_NUMBER = "SDL.texture.create.width"
  PROP_TEXTURE_CREATE_HEIGHT_NUMBER = "SDL.texture.create.height"
  PROP_TEXTURE_CREATE_SDR_WHITE_POINT_FLOAT = "SDL.texture.create.SDR_white_point"
  PROP_TEXTURE_CREATE_HDR_HEADROOM_FLOAT = "SDL.texture.create.HDR_headroom"
  PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER = "SDL.texture.create.d3d11.texture"
  PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER = "SDL.texture.create.d3d11.texture_u"
  PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER = "SDL.texture.create.d3d11.texture_v"
  PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER = "SDL.texture.create.d3d12.texture"
  PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER = "SDL.texture.create.d3d12.texture_u"
  PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER = "SDL.texture.create.d3d12.texture_v"
  PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER = "SDL.texture.create.metal.pixelbuffer"
  PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER = "SDL.texture.create.opengl.texture"
  PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER = "SDL.texture.create.opengl.texture_uv"
  PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER = "SDL.texture.create.opengl.texture_u"
  PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER = "SDL.texture.create.opengl.texture_v"
  PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER = "SDL.texture.create.opengles2.texture"
  PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER = "SDL.texture.create.opengles2.texture_uv"
  PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER = "SDL.texture.create.opengles2.texture_u"
  PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER = "SDL.texture.create.opengles2.texture_v"
  PROP_TEXTURE_CREATE_VULKAN_TEXTURE_NUMBER = "SDL.texture.create.vulkan.texture"
  PROP_TEXTURE_COLORSPACE_NUMBER = "SDL.texture.colorspace"
  PROP_TEXTURE_FORMAT_NUMBER = "SDL.texture.format"
  PROP_TEXTURE_ACCESS_NUMBER = "SDL.texture.access"
  PROP_TEXTURE_WIDTH_NUMBER = "SDL.texture.width"
  PROP_TEXTURE_HEIGHT_NUMBER = "SDL.texture.height"
  PROP_TEXTURE_SDR_WHITE_POINT_FLOAT = "SDL.texture.SDR_white_point"
  PROP_TEXTURE_HDR_HEADROOM_FLOAT = "SDL.texture.HDR_headroom"
  PROP_TEXTURE_D3D11_TEXTURE_POINTER = "SDL.texture.d3d11.texture"
  PROP_TEXTURE_D3D11_TEXTURE_U_POINTER = "SDL.texture.d3d11.texture_u"
  PROP_TEXTURE_D3D11_TEXTURE_V_POINTER = "SDL.texture.d3d11.texture_v"
  PROP_TEXTURE_D3D12_TEXTURE_POINTER = "SDL.texture.d3d12.texture"
  PROP_TEXTURE_D3D12_TEXTURE_U_POINTER = "SDL.texture.d3d12.texture_u"
  PROP_TEXTURE_D3D12_TEXTURE_V_POINTER = "SDL.texture.d3d12.texture_v"
  PROP_TEXTURE_OPENGL_TEXTURE_NUMBER = "SDL.texture.opengl.texture"
  PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER = "SDL.texture.opengl.texture_uv"
  PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER = "SDL.texture.opengl.texture_u"
  PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER = "SDL.texture.opengl.texture_v"
  PROP_TEXTURE_OPENGL_TEXTURE_TARGET_NUMBER = "SDL.texture.opengl.target"
  PROP_TEXTURE_OPENGL_TEX_W_FLOAT = "SDL.texture.opengl.tex_w"
  PROP_TEXTURE_OPENGL_TEX_H_FLOAT = "SDL.texture.opengl.tex_h"
  PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER = "SDL.texture.opengles2.texture"
  PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER = "SDL.texture.opengles2.texture_uv"
  PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER = "SDL.texture.opengles2.texture_u"
  PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER = "SDL.texture.opengles2.texture_v"
  PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET_NUMBER = "SDL.texture.opengles2.target"
  PROP_TEXTURE_VULKAN_TEXTURE_NUMBER = "SDL.texture.vulkan.texture"
  RENDERER_VSYNC_DISABLED = 0
  RENDERER_VSYNC_ADAPTIVE = -1
  DEBUG_TEXT_FONT_CHARACTER_SIZE = 8

  # Enum

  TEXTUREACCESS_STATIC = 0
  TEXTUREACCESS_STREAMING = 1
  TEXTUREACCESS_TARGET = 2
  LOGICAL_PRESENTATION_DISABLED = 0
  LOGICAL_PRESENTATION_STRETCH = 1
  LOGICAL_PRESENTATION_LETTERBOX = 2
  LOGICAL_PRESENTATION_OVERSCAN = 3
  LOGICAL_PRESENTATION_INTEGER_SCALE = 4

  # Typedef

  typedef :int, :SDL_TextureAccess
  typedef :int, :SDL_RendererLogicalPresentation

  # Struct

  class Vertex < FFI::Struct
    layout(
      :position, FPoint,
      :color, FColor,
      :tex_coord, FPoint,
    )
  end

  class Texture < FFI::Struct
    layout(
      :format, :int,
      :w, :int,
      :h, :int,
      :refcount, :int,
    )
  end


  # Function

  def self.setup_render_symbols(output_error = false)
    symbols = [
      :SDL_GetNumRenderDrivers,
      :SDL_GetRenderDriver,
      :SDL_CreateWindowAndRenderer,
      :SDL_CreateRenderer,
      :SDL_CreateRendererWithProperties,
      :SDL_CreateSoftwareRenderer,
      :SDL_GetRenderer,
      :SDL_GetRenderWindow,
      :SDL_GetRendererName,
      :SDL_GetRendererProperties,
      :SDL_GetRenderOutputSize,
      :SDL_GetCurrentRenderOutputSize,
      :SDL_CreateTexture,
      :SDL_CreateTextureFromSurface,
      :SDL_CreateTextureWithProperties,
      :SDL_GetTextureProperties,
      :SDL_GetRendererFromTexture,
      :SDL_GetTextureSize,
      :SDL_SetTextureColorMod,
      :SDL_SetTextureColorModFloat,
      :SDL_GetTextureColorMod,
      :SDL_GetTextureColorModFloat,
      :SDL_SetTextureAlphaMod,
      :SDL_SetTextureAlphaModFloat,
      :SDL_GetTextureAlphaMod,
      :SDL_GetTextureAlphaModFloat,
      :SDL_SetTextureBlendMode,
      :SDL_GetTextureBlendMode,
      :SDL_SetTextureScaleMode,
      :SDL_GetTextureScaleMode,
      :SDL_UpdateTexture,
      :SDL_UpdateYUVTexture,
      :SDL_UpdateNVTexture,
      :SDL_LockTexture,
      :SDL_LockTextureToSurface,
      :SDL_UnlockTexture,
      :SDL_SetRenderTarget,
      :SDL_GetRenderTarget,
      :SDL_SetRenderLogicalPresentation,
      :SDL_GetRenderLogicalPresentation,
      :SDL_GetRenderLogicalPresentationRect,
      :SDL_RenderCoordinatesFromWindow,
      :SDL_RenderCoordinatesToWindow,
      :SDL_ConvertEventToRenderCoordinates,
      :SDL_SetRenderViewport,
      :SDL_GetRenderViewport,
      :SDL_RenderViewportSet,
      :SDL_GetRenderSafeArea,
      :SDL_SetRenderClipRect,
      :SDL_GetRenderClipRect,
      :SDL_RenderClipEnabled,
      :SDL_SetRenderScale,
      :SDL_GetRenderScale,
      :SDL_SetRenderDrawColor,
      :SDL_SetRenderDrawColorFloat,
      :SDL_GetRenderDrawColor,
      :SDL_GetRenderDrawColorFloat,
      :SDL_SetRenderColorScale,
      :SDL_GetRenderColorScale,
      :SDL_SetRenderDrawBlendMode,
      :SDL_GetRenderDrawBlendMode,
      :SDL_RenderClear,
      :SDL_RenderPoint,
      :SDL_RenderPoints,
      :SDL_RenderLine,
      :SDL_RenderLines,
      :SDL_RenderRect,
      :SDL_RenderRects,
      :SDL_RenderFillRect,
      :SDL_RenderFillRects,
      :SDL_RenderTexture,
      :SDL_RenderTextureRotated,
      :SDL_RenderTextureAffine,
      :SDL_RenderTextureTiled,
      :SDL_RenderTexture9Grid,
      :SDL_RenderGeometry,
      :SDL_RenderGeometryRaw,
      :SDL_RenderReadPixels,
      :SDL_RenderPresent,
      :SDL_DestroyTexture,
      :SDL_DestroyRenderer,
      :SDL_FlushRenderer,
      :SDL_GetRenderMetalLayer,
      :SDL_GetRenderMetalCommandEncoder,
      :SDL_AddVulkanRenderSemaphores,
      :SDL_SetRenderVSync,
      :SDL_GetRenderVSync,
      :SDL_RenderDebugText,
      :SDL_RenderDebugTextFormat,
    ]
    apis = {
      :SDL_GetNumRenderDrivers => :GetNumRenderDrivers,
      :SDL_GetRenderDriver => :GetRenderDriver,
      :SDL_CreateWindowAndRenderer => :CreateWindowAndRenderer,
      :SDL_CreateRenderer => :CreateRenderer,
      :SDL_CreateRendererWithProperties => :CreateRendererWithProperties,
      :SDL_CreateSoftwareRenderer => :CreateSoftwareRenderer,
      :SDL_GetRenderer => :GetRenderer,
      :SDL_GetRenderWindow => :GetRenderWindow,
      :SDL_GetRendererName => :GetRendererName,
      :SDL_GetRendererProperties => :GetRendererProperties,
      :SDL_GetRenderOutputSize => :GetRenderOutputSize,
      :SDL_GetCurrentRenderOutputSize => :GetCurrentRenderOutputSize,
      :SDL_CreateTexture => :CreateTexture,
      :SDL_CreateTextureFromSurface => :CreateTextureFromSurface,
      :SDL_CreateTextureWithProperties => :CreateTextureWithProperties,
      :SDL_GetTextureProperties => :GetTextureProperties,
      :SDL_GetRendererFromTexture => :GetRendererFromTexture,
      :SDL_GetTextureSize => :GetTextureSize,
      :SDL_SetTextureColorMod => :SetTextureColorMod,
      :SDL_SetTextureColorModFloat => :SetTextureColorModFloat,
      :SDL_GetTextureColorMod => :GetTextureColorMod,
      :SDL_GetTextureColorModFloat => :GetTextureColorModFloat,
      :SDL_SetTextureAlphaMod => :SetTextureAlphaMod,
      :SDL_SetTextureAlphaModFloat => :SetTextureAlphaModFloat,
      :SDL_GetTextureAlphaMod => :GetTextureAlphaMod,
      :SDL_GetTextureAlphaModFloat => :GetTextureAlphaModFloat,
      :SDL_SetTextureBlendMode => :SetTextureBlendMode,
      :SDL_GetTextureBlendMode => :GetTextureBlendMode,
      :SDL_SetTextureScaleMode => :SetTextureScaleMode,
      :SDL_GetTextureScaleMode => :GetTextureScaleMode,
      :SDL_UpdateTexture => :UpdateTexture,
      :SDL_UpdateYUVTexture => :UpdateYUVTexture,
      :SDL_UpdateNVTexture => :UpdateNVTexture,
      :SDL_LockTexture => :LockTexture,
      :SDL_LockTextureToSurface => :LockTextureToSurface,
      :SDL_UnlockTexture => :UnlockTexture,
      :SDL_SetRenderTarget => :SetRenderTarget,
      :SDL_GetRenderTarget => :GetRenderTarget,
      :SDL_SetRenderLogicalPresentation => :SetRenderLogicalPresentation,
      :SDL_GetRenderLogicalPresentation => :GetRenderLogicalPresentation,
      :SDL_GetRenderLogicalPresentationRect => :GetRenderLogicalPresentationRect,
      :SDL_RenderCoordinatesFromWindow => :RenderCoordinatesFromWindow,
      :SDL_RenderCoordinatesToWindow => :RenderCoordinatesToWindow,
      :SDL_ConvertEventToRenderCoordinates => :ConvertEventToRenderCoordinates,
      :SDL_SetRenderViewport => :SetRenderViewport,
      :SDL_GetRenderViewport => :GetRenderViewport,
      :SDL_RenderViewportSet => :RenderViewportSet,
      :SDL_GetRenderSafeArea => :GetRenderSafeArea,
      :SDL_SetRenderClipRect => :SetRenderClipRect,
      :SDL_GetRenderClipRect => :GetRenderClipRect,
      :SDL_RenderClipEnabled => :RenderClipEnabled,
      :SDL_SetRenderScale => :SetRenderScale,
      :SDL_GetRenderScale => :GetRenderScale,
      :SDL_SetRenderDrawColor => :SetRenderDrawColor,
      :SDL_SetRenderDrawColorFloat => :SetRenderDrawColorFloat,
      :SDL_GetRenderDrawColor => :GetRenderDrawColor,
      :SDL_GetRenderDrawColorFloat => :GetRenderDrawColorFloat,
      :SDL_SetRenderColorScale => :SetRenderColorScale,
      :SDL_GetRenderColorScale => :GetRenderColorScale,
      :SDL_SetRenderDrawBlendMode => :SetRenderDrawBlendMode,
      :SDL_GetRenderDrawBlendMode => :GetRenderDrawBlendMode,
      :SDL_RenderClear => :RenderClear,
      :SDL_RenderPoint => :RenderPoint,
      :SDL_RenderPoints => :RenderPoints,
      :SDL_RenderLine => :RenderLine,
      :SDL_RenderLines => :RenderLines,
      :SDL_RenderRect => :RenderRect,
      :SDL_RenderRects => :RenderRects,
      :SDL_RenderFillRect => :RenderFillRect,
      :SDL_RenderFillRects => :RenderFillRects,
      :SDL_RenderTexture => :RenderTexture,
      :SDL_RenderTextureRotated => :RenderTextureRotated,
      :SDL_RenderTextureAffine => :RenderTextureAffine,
      :SDL_RenderTextureTiled => :RenderTextureTiled,
      :SDL_RenderTexture9Grid => :RenderTexture9Grid,
      :SDL_RenderGeometry => :RenderGeometry,
      :SDL_RenderGeometryRaw => :RenderGeometryRaw,
      :SDL_RenderReadPixels => :RenderReadPixels,
      :SDL_RenderPresent => :RenderPresent,
      :SDL_DestroyTexture => :DestroyTexture,
      :SDL_DestroyRenderer => :DestroyRenderer,
      :SDL_FlushRenderer => :FlushRenderer,
      :SDL_GetRenderMetalLayer => :GetRenderMetalLayer,
      :SDL_GetRenderMetalCommandEncoder => :GetRenderMetalCommandEncoder,
      :SDL_AddVulkanRenderSemaphores => :AddVulkanRenderSemaphores,
      :SDL_SetRenderVSync => :SetRenderVSync,
      :SDL_GetRenderVSync => :GetRenderVSync,
      :SDL_RenderDebugText => :RenderDebugText,
      :SDL_RenderDebugTextFormat => :RenderDebugTextFormat,
    }
    args = {
      :SDL_GetNumRenderDrivers => [],
      :SDL_GetRenderDriver => [:int],
      :SDL_CreateWindowAndRenderer => [:pointer, :int, :int, :ulong_long, :pointer, :pointer],
      :SDL_CreateRenderer => [:pointer, :pointer],
      :SDL_CreateRendererWithProperties => [:uint],
      :SDL_CreateSoftwareRenderer => [:pointer],
      :SDL_GetRenderer => [:pointer],
      :SDL_GetRenderWindow => [:pointer],
      :SDL_GetRendererName => [:pointer],
      :SDL_GetRendererProperties => [:pointer],
      :SDL_GetRenderOutputSize => [:pointer, :pointer, :pointer],
      :SDL_GetCurrentRenderOutputSize => [:pointer, :pointer, :pointer],
      :SDL_CreateTexture => [:pointer, :int, :int, :int, :int],
      :SDL_CreateTextureFromSurface => [:pointer, :pointer],
      :SDL_CreateTextureWithProperties => [:pointer, :uint],
      :SDL_GetTextureProperties => [:pointer],
      :SDL_GetRendererFromTexture => [:pointer],
      :SDL_GetTextureSize => [:pointer, :pointer, :pointer],
      :SDL_SetTextureColorMod => [:pointer, :uchar, :uchar, :uchar],
      :SDL_SetTextureColorModFloat => [:pointer, :float, :float, :float],
      :SDL_GetTextureColorMod => [:pointer, :pointer, :pointer, :pointer],
      :SDL_GetTextureColorModFloat => [:pointer, :pointer, :pointer, :pointer],
      :SDL_SetTextureAlphaMod => [:pointer, :uchar],
      :SDL_SetTextureAlphaModFloat => [:pointer, :float],
      :SDL_GetTextureAlphaMod => [:pointer, :pointer],
      :SDL_GetTextureAlphaModFloat => [:pointer, :pointer],
      :SDL_SetTextureBlendMode => [:pointer, :uint],
      :SDL_GetTextureBlendMode => [:pointer, :pointer],
      :SDL_SetTextureScaleMode => [:pointer, :int],
      :SDL_GetTextureScaleMode => [:pointer, :pointer],
      :SDL_UpdateTexture => [:pointer, :pointer, :pointer, :int],
      :SDL_UpdateYUVTexture => [:pointer, :pointer, :pointer, :int, :pointer, :int, :pointer, :int],
      :SDL_UpdateNVTexture => [:pointer, :pointer, :pointer, :int, :pointer, :int],
      :SDL_LockTexture => [:pointer, :pointer, :pointer, :pointer],
      :SDL_LockTextureToSurface => [:pointer, :pointer, :pointer],
      :SDL_UnlockTexture => [:pointer],
      :SDL_SetRenderTarget => [:pointer, :pointer],
      :SDL_GetRenderTarget => [:pointer],
      :SDL_SetRenderLogicalPresentation => [:pointer, :int, :int, :int],
      :SDL_GetRenderLogicalPresentation => [:pointer, :pointer, :pointer, :pointer],
      :SDL_GetRenderLogicalPresentationRect => [:pointer, :pointer],
      :SDL_RenderCoordinatesFromWindow => [:pointer, :float, :float, :pointer, :pointer],
      :SDL_RenderCoordinatesToWindow => [:pointer, :float, :float, :pointer, :pointer],
      :SDL_ConvertEventToRenderCoordinates => [:pointer, :pointer],
      :SDL_SetRenderViewport => [:pointer, :pointer],
      :SDL_GetRenderViewport => [:pointer, :pointer],
      :SDL_RenderViewportSet => [:pointer],
      :SDL_GetRenderSafeArea => [:pointer, :pointer],
      :SDL_SetRenderClipRect => [:pointer, :pointer],
      :SDL_GetRenderClipRect => [:pointer, :pointer],
      :SDL_RenderClipEnabled => [:pointer],
      :SDL_SetRenderScale => [:pointer, :float, :float],
      :SDL_GetRenderScale => [:pointer, :pointer, :pointer],
      :SDL_SetRenderDrawColor => [:pointer, :uchar, :uchar, :uchar, :uchar],
      :SDL_SetRenderDrawColorFloat => [:pointer, :float, :float, :float, :float],
      :SDL_GetRenderDrawColor => [:pointer, :pointer, :pointer, :pointer, :pointer],
      :SDL_GetRenderDrawColorFloat => [:pointer, :pointer, :pointer, :pointer, :pointer],
      :SDL_SetRenderColorScale => [:pointer, :float],
      :SDL_GetRenderColorScale => [:pointer, :pointer],
      :SDL_SetRenderDrawBlendMode => [:pointer, :uint],
      :SDL_GetRenderDrawBlendMode => [:pointer, :pointer],
      :SDL_RenderClear => [:pointer],
      :SDL_RenderPoint => [:pointer, :float, :float],
      :SDL_RenderPoints => [:pointer, :pointer, :int],
      :SDL_RenderLine => [:pointer, :float, :float, :float, :float],
      :SDL_RenderLines => [:pointer, :pointer, :int],
      :SDL_RenderRect => [:pointer, :pointer],
      :SDL_RenderRects => [:pointer, :pointer, :int],
      :SDL_RenderFillRect => [:pointer, :pointer],
      :SDL_RenderFillRects => [:pointer, :pointer, :int],
      :SDL_RenderTexture => [:pointer, :pointer, :pointer, :pointer],
      :SDL_RenderTextureRotated => [:pointer, :pointer, :pointer, :pointer, :double, :pointer, :int],
      :SDL_RenderTextureAffine => [:pointer, :pointer, :pointer, :pointer, :pointer, :pointer],
      :SDL_RenderTextureTiled => [:pointer, :pointer, :pointer, :float, :pointer],
      :SDL_RenderTexture9Grid => [:pointer, :pointer, :pointer, :float, :float, :float, :float, :float, :pointer],
      :SDL_RenderGeometry => [:pointer, :pointer, :pointer, :int, :pointer, :int],
      :SDL_RenderGeometryRaw => [:pointer, :pointer, :pointer, :int, :pointer, :int, :pointer, :int, :int, :pointer, :int, :int],
      :SDL_RenderReadPixels => [:pointer, :pointer],
      :SDL_RenderPresent => [:pointer],
      :SDL_DestroyTexture => [:pointer],
      :SDL_DestroyRenderer => [:pointer],
      :SDL_FlushRenderer => [:pointer],
      :SDL_GetRenderMetalLayer => [:pointer],
      :SDL_GetRenderMetalCommandEncoder => [:pointer],
      :SDL_AddVulkanRenderSemaphores => [:pointer, :uint, :long_long, :long_long],
      :SDL_SetRenderVSync => [:pointer, :int],
      :SDL_GetRenderVSync => [:pointer, :pointer],
      :SDL_RenderDebugText => [:pointer, :float, :float, :pointer],
      :SDL_RenderDebugTextFormat => [:pointer, :float, :float, :pointer],
    }
    retvals = {
      :SDL_GetNumRenderDrivers => :int,
      :SDL_GetRenderDriver => :pointer,
      :SDL_CreateWindowAndRenderer => :bool,
      :SDL_CreateRenderer => :pointer,
      :SDL_CreateRendererWithProperties => :pointer,
      :SDL_CreateSoftwareRenderer => :pointer,
      :SDL_GetRenderer => :pointer,
      :SDL_GetRenderWindow => :pointer,
      :SDL_GetRendererName => :pointer,
      :SDL_GetRendererProperties => :uint,
      :SDL_GetRenderOutputSize => :bool,
      :SDL_GetCurrentRenderOutputSize => :bool,
      :SDL_CreateTexture => :pointer,
      :SDL_CreateTextureFromSurface => :pointer,
      :SDL_CreateTextureWithProperties => :pointer,
      :SDL_GetTextureProperties => :uint,
      :SDL_GetRendererFromTexture => :pointer,
      :SDL_GetTextureSize => :bool,
      :SDL_SetTextureColorMod => :bool,
      :SDL_SetTextureColorModFloat => :bool,
      :SDL_GetTextureColorMod => :bool,
      :SDL_GetTextureColorModFloat => :bool,
      :SDL_SetTextureAlphaMod => :bool,
      :SDL_SetTextureAlphaModFloat => :bool,
      :SDL_GetTextureAlphaMod => :bool,
      :SDL_GetTextureAlphaModFloat => :bool,
      :SDL_SetTextureBlendMode => :bool,
      :SDL_GetTextureBlendMode => :bool,
      :SDL_SetTextureScaleMode => :bool,
      :SDL_GetTextureScaleMode => :bool,
      :SDL_UpdateTexture => :bool,
      :SDL_UpdateYUVTexture => :bool,
      :SDL_UpdateNVTexture => :bool,
      :SDL_LockTexture => :bool,
      :SDL_LockTextureToSurface => :bool,
      :SDL_UnlockTexture => :void,
      :SDL_SetRenderTarget => :bool,
      :SDL_GetRenderTarget => :pointer,
      :SDL_SetRenderLogicalPresentation => :bool,
      :SDL_GetRenderLogicalPresentation => :bool,
      :SDL_GetRenderLogicalPresentationRect => :bool,
      :SDL_RenderCoordinatesFromWindow => :bool,
      :SDL_RenderCoordinatesToWindow => :bool,
      :SDL_ConvertEventToRenderCoordinates => :bool,
      :SDL_SetRenderViewport => :bool,
      :SDL_GetRenderViewport => :bool,
      :SDL_RenderViewportSet => :bool,
      :SDL_GetRenderSafeArea => :bool,
      :SDL_SetRenderClipRect => :bool,
      :SDL_GetRenderClipRect => :bool,
      :SDL_RenderClipEnabled => :bool,
      :SDL_SetRenderScale => :bool,
      :SDL_GetRenderScale => :bool,
      :SDL_SetRenderDrawColor => :bool,
      :SDL_SetRenderDrawColorFloat => :bool,
      :SDL_GetRenderDrawColor => :bool,
      :SDL_GetRenderDrawColorFloat => :bool,
      :SDL_SetRenderColorScale => :bool,
      :SDL_GetRenderColorScale => :bool,
      :SDL_SetRenderDrawBlendMode => :bool,
      :SDL_GetRenderDrawBlendMode => :bool,
      :SDL_RenderClear => :bool,
      :SDL_RenderPoint => :bool,
      :SDL_RenderPoints => :bool,
      :SDL_RenderLine => :bool,
      :SDL_RenderLines => :bool,
      :SDL_RenderRect => :bool,
      :SDL_RenderRects => :bool,
      :SDL_RenderFillRect => :bool,
      :SDL_RenderFillRects => :bool,
      :SDL_RenderTexture => :bool,
      :SDL_RenderTextureRotated => :bool,
      :SDL_RenderTextureAffine => :bool,
      :SDL_RenderTextureTiled => :bool,
      :SDL_RenderTexture9Grid => :bool,
      :SDL_RenderGeometry => :bool,
      :SDL_RenderGeometryRaw => :bool,
      :SDL_RenderReadPixels => :pointer,
      :SDL_RenderPresent => :bool,
      :SDL_DestroyTexture => :void,
      :SDL_DestroyRenderer => :void,
      :SDL_FlushRenderer => :bool,
      :SDL_GetRenderMetalLayer => :pointer,
      :SDL_GetRenderMetalCommandEncoder => :pointer,
      :SDL_AddVulkanRenderSemaphores => :bool,
      :SDL_SetRenderVSync => :bool,
      :SDL_GetRenderVSync => :bool,
      :SDL_RenderDebugText => :bool,
      :SDL_RenderDebugTextFormat => :bool,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

