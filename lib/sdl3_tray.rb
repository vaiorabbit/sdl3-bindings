# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module SDL
  extend FFI::Library
  # Define/Macro

  TRAYENTRY_BUTTON = 0x00000001
  TRAYENTRY_CHECKBOX = 0x00000002
  TRAYENTRY_SUBMENU = 0x00000004
  TRAYENTRY_DISABLED = 0x80000000
  TRAYENTRY_CHECKED = 0x40000000

  # Enum


  # Typedef

  typedef :uint, :SDL_TrayEntryFlags
  callback :SDL_TrayCallback, [:pointer, :pointer], :void

  # Struct


  # Function

  def self.setup_tray_symbols(output_error = false)
    entries = [
      [:CreateTray, :SDL_CreateTray, [:pointer, :pointer], :pointer],
      [:SetTrayIcon, :SDL_SetTrayIcon, [:pointer, :pointer], :void],
      [:SetTrayTooltip, :SDL_SetTrayTooltip, [:pointer, :pointer], :void],
      [:CreateTrayMenu, :SDL_CreateTrayMenu, [:pointer], :pointer],
      [:CreateTraySubmenu, :SDL_CreateTraySubmenu, [:pointer], :pointer],
      [:GetTrayMenu, :SDL_GetTrayMenu, [:pointer], :pointer],
      [:GetTraySubmenu, :SDL_GetTraySubmenu, [:pointer], :pointer],
      [:GetTrayEntries, :SDL_GetTrayEntries, [:pointer, :pointer], :pointer],
      [:RemoveTrayEntry, :SDL_RemoveTrayEntry, [:pointer], :void],
      [:InsertTrayEntryAt, :SDL_InsertTrayEntryAt, [:pointer, :int, :pointer, :uint], :pointer],
      [:SetTrayEntryLabel, :SDL_SetTrayEntryLabel, [:pointer, :pointer], :void],
      [:GetTrayEntryLabel, :SDL_GetTrayEntryLabel, [:pointer], :pointer],
      [:SetTrayEntryChecked, :SDL_SetTrayEntryChecked, [:pointer, :bool], :void],
      [:GetTrayEntryChecked, :SDL_GetTrayEntryChecked, [:pointer], :bool],
      [:SetTrayEntryEnabled, :SDL_SetTrayEntryEnabled, [:pointer, :bool], :void],
      [:GetTrayEntryEnabled, :SDL_GetTrayEntryEnabled, [:pointer], :bool],
      [:SetTrayEntryCallback, :SDL_SetTrayEntryCallback, [:pointer, :SDL_TrayCallback, :pointer], :void],
      [:ClickTrayEntry, :SDL_ClickTrayEntry, [:pointer], :void],
      [:DestroyTray, :SDL_DestroyTray, [:pointer], :void],
      [:GetTrayEntryParent, :SDL_GetTrayEntryParent, [:pointer], :pointer],
      [:GetTrayMenuParentEntry, :SDL_GetTrayMenuParentEntry, [:pointer], :pointer],
      [:GetTrayMenuParentTray, :SDL_GetTrayMenuParentTray, [:pointer], :pointer],
      [:UpdateTrays, :SDL_UpdateTrays, [], :void],
    ]
    entries.each do |entry|
      attach_function entry[0], entry[1], entry[2], entry[3]
    rescue FFI::NotFoundError => e
      warn "[Warning] Failed to import #{entry[0]} (#{e})." if output_error
    end
  end

end

