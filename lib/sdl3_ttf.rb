# Ruby-SDL3 : SDL3 wrapper for Ruby
#
# * https://github.com/vaiorabbit/sdl3-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'
require_relative 'sdl3_pixels'

module SDL
  extend FFI::Library
  # Define/Macro

  TTF_MAJOR_VERSION = 3
  TTF_MINOR_VERSION = 1
  TTF_MICRO_VERSION = 0
  TTF_PROP_FONT_CREATE_FILENAME_STRING = "SDL_ttf.font.create.filename"
  TTF_PROP_FONT_CREATE_IOSTREAM_POINTER = "SDL_ttf.font.create.iostream"
  TTF_PROP_FONT_CREATE_IOSTREAM_OFFSET_NUMBER = "SDL_ttf.font.create.iostream.offset"
  TTF_PROP_FONT_CREATE_IOSTREAM_AUTOCLOSE_BOOLEAN = "SDL_ttf.font.create.iostream.autoclose"
  TTF_PROP_FONT_CREATE_SIZE_FLOAT = "SDL_ttf.font.create.size"
  TTF_PROP_FONT_CREATE_FACE_NUMBER = "SDL_ttf.font.create.face"
  TTF_PROP_FONT_CREATE_HORIZONTAL_DPI_NUMBER = "SDL_ttf.font.create.hdpi"
  TTF_PROP_FONT_CREATE_VERTICAL_DPI_NUMBER = "SDL_ttf.font.create.vdpi"
  TTF_PROP_FONT_OUTLINE_LINE_CAP_NUMBER = "SDL_ttf.font.outline.line_cap"
  TTF_PROP_FONT_OUTLINE_LINE_JOIN_NUMBER = "SDL_ttf.font.outline.line_join"
  TTF_PROP_FONT_OUTLINE_MITER_LIMIT_NUMBER = "SDL_ttf.font.outline.miter_limit"
  TTF_STYLE_NORMAL = 0x00
  TTF_STYLE_BOLD = 0x01
  TTF_STYLE_ITALIC = 0x02
  TTF_STYLE_UNDERLINE = 0x04
  TTF_STYLE_STRIKETHROUGH = 0x08
  TTF_SUBSTRING_TEXT_START = 0x00000001
  TTF_SUBSTRING_LINE_START = 0x00000002
  TTF_SUBSTRING_LINE_END = 0x00000004
  TTF_SUBSTRING_TEXT_END = 0x00000008

  # Enum

  TTF_HINTING_NORMAL = 0
  TTF_HINTING_LIGHT = 1
  TTF_HINTING_MONO = 2
  TTF_HINTING_NONE = 3
  TTF_HINTING_LIGHT_SUBPIXEL = 4
  TTF_HORIZONTAL_ALIGN_INVALID = -1
  TTF_HORIZONTAL_ALIGN_LEFT = 0
  TTF_HORIZONTAL_ALIGN_CENTER = 1
  TTF_HORIZONTAL_ALIGN_RIGHT = 2
  TTF_DIRECTION_LTR = 0
  TTF_DIRECTION_RTL = 1
  TTF_DIRECTION_TTB = 2
  TTF_DIRECTION_BTT = 3
  TTF_GPU_TEXTENGINE_WINDING_INVALID = -1
  TTF_GPU_TEXTENGINE_WINDING_CLOCKWISE = 0
  TTF_GPU_TEXTENGINE_WINDING_COUNTER_CLOCKWISE = 1

  # Typedef

  typedef :uint, :TTF_FontStyleFlags
  typedef :int, :TTF_HintingFlags
  typedef :int, :TTF_HorizontalAlignment
  typedef :int, :TTF_Direction
  typedef :int, :TTF_GPUTextEngineWinding
  typedef :uint, :TTF_SubStringFlags

  # Struct

  class TTF_Text < FFI::Struct
    layout(
      :text, :pointer,
      :num_lines, :int,
      :refcount, :int,
      :internal, :pointer,
    )
  end

  class TTF_GPUAtlasDrawSequence < FFI::Struct
    layout(
      :atlas_texture, :pointer,
      :xy, :pointer,
      :uv, :pointer,
      :num_vertices, :int,
      :indices, :pointer,
      :num_indices, :int,
      :next, :pointer,
    )
  end

  class TTF_SubString < FFI::Struct
    layout(
      :flags, :uint,
      :offset, :int,
      :length, :int,
      :line_index, :int,
      :cluster_index, :int,
      :rect, Rect,
    )
  end


  # Function

  def self.setup_ttf_symbols(output_error = false)
    symbols = [
      :TTF_Version,
      :TTF_GetFreeTypeVersion,
      :TTF_GetHarfBuzzVersion,
      :TTF_Init,
      :TTF_OpenFont,
      :TTF_OpenFontIO,
      :TTF_OpenFontWithProperties,
      :TTF_GetFontProperties,
      :TTF_GetFontGeneration,
      :TTF_SetFontSize,
      :TTF_SetFontSizeDPI,
      :TTF_GetFontSize,
      :TTF_GetFontDPI,
      :TTF_SetFontStyle,
      :TTF_GetFontStyle,
      :TTF_SetFontOutline,
      :TTF_GetFontOutline,
      :TTF_SetFontHinting,
      :TTF_GetFontHinting,
      :TTF_SetFontSDF,
      :TTF_GetFontSDF,
      :TTF_SetFontWrapAlignment,
      :TTF_GetFontWrapAlignment,
      :TTF_GetFontHeight,
      :TTF_GetFontAscent,
      :TTF_GetFontDescent,
      :TTF_SetFontLineSkip,
      :TTF_GetFontLineSkip,
      :TTF_SetFontKerning,
      :TTF_GetFontKerning,
      :TTF_FontIsFixedWidth,
      :TTF_FontIsScalable,
      :TTF_GetFontFamilyName,
      :TTF_GetFontStyleName,
      :TTF_RenderText_Solid,
      :TTF_RenderText_Solid_Wrapped,
      :TTF_RenderGlyph_Solid,
      :TTF_SetFontDirection,
      :TTF_GetFontDirection,
      :TTF_SetFontScript,
      :TTF_GetGlyphScript,
      :TTF_SetFontLanguage,
      :TTF_FontHasGlyph,
      :TTF_GetGlyphImage,
      :TTF_GetGlyphImageForIndex,
      :TTF_GetGlyphMetrics,
      :TTF_GetGlyphKerning,
      :TTF_GetStringSize,
      :TTF_GetStringSizeWrapped,
      :TTF_MeasureString,
      :TTF_RenderText_Shaded,
      :TTF_RenderText_Shaded_Wrapped,
      :TTF_RenderGlyph_Shaded,
      :TTF_RenderText_Blended,
      :TTF_RenderText_Blended_Wrapped,
      :TTF_RenderGlyph_Blended,
      :TTF_RenderText_LCD,
      :TTF_RenderText_LCD_Wrapped,
      :TTF_RenderGlyph_LCD,
      :TTF_CreateSurfaceTextEngine,
      :TTF_DrawSurfaceText,
      :TTF_DestroySurfaceTextEngine,
      :TTF_CreateRendererTextEngine,
      :TTF_DrawRendererText,
      :TTF_DestroyRendererTextEngine,
      :TTF_CreateGPUTextEngine,
      :TTF_GetGPUTextDrawData,
      :TTF_DestroyGPUTextEngine,
      :TTF_SetGPUTextEngineWinding,
      :TTF_GetGPUTextEngineWinding,
      :TTF_CreateText,
      :TTF_GetTextProperties,
      :TTF_SetTextEngine,
      :TTF_GetTextEngine,
      :TTF_SetTextFont,
      :TTF_GetTextFont,
      :TTF_SetTextColor,
      :TTF_SetTextColorFloat,
      :TTF_GetTextColor,
      :TTF_GetTextColorFloat,
      :TTF_SetTextPosition,
      :TTF_GetTextPosition,
      :TTF_SetTextWrapWidth,
      :TTF_GetTextWrapWidth,
      :TTF_SetTextWrapWhitespaceVisible,
      :TTF_TextWrapWhitespaceVisible,
      :TTF_SetTextString,
      :TTF_InsertTextString,
      :TTF_AppendTextString,
      :TTF_DeleteTextString,
      :TTF_GetTextSize,
      :TTF_GetTextSubString,
      :TTF_GetTextSubStringForLine,
      :TTF_GetTextSubStringsForRange,
      :TTF_GetTextSubStringForPoint,
      :TTF_GetPreviousTextSubString,
      :TTF_GetNextTextSubString,
      :TTF_UpdateText,
      :TTF_DestroyText,
      :TTF_CloseFont,
      :TTF_Quit,
      :TTF_WasInit,
    ]
    apis = {
      :TTF_Version => :TTF_Version,
      :TTF_GetFreeTypeVersion => :TTF_GetFreeTypeVersion,
      :TTF_GetHarfBuzzVersion => :TTF_GetHarfBuzzVersion,
      :TTF_Init => :TTF_Init,
      :TTF_OpenFont => :TTF_OpenFont,
      :TTF_OpenFontIO => :TTF_OpenFontIO,
      :TTF_OpenFontWithProperties => :TTF_OpenFontWithProperties,
      :TTF_GetFontProperties => :TTF_GetFontProperties,
      :TTF_GetFontGeneration => :TTF_GetFontGeneration,
      :TTF_SetFontSize => :TTF_SetFontSize,
      :TTF_SetFontSizeDPI => :TTF_SetFontSizeDPI,
      :TTF_GetFontSize => :TTF_GetFontSize,
      :TTF_GetFontDPI => :TTF_GetFontDPI,
      :TTF_SetFontStyle => :TTF_SetFontStyle,
      :TTF_GetFontStyle => :TTF_GetFontStyle,
      :TTF_SetFontOutline => :TTF_SetFontOutline,
      :TTF_GetFontOutline => :TTF_GetFontOutline,
      :TTF_SetFontHinting => :TTF_SetFontHinting,
      :TTF_GetFontHinting => :TTF_GetFontHinting,
      :TTF_SetFontSDF => :TTF_SetFontSDF,
      :TTF_GetFontSDF => :TTF_GetFontSDF,
      :TTF_SetFontWrapAlignment => :TTF_SetFontWrapAlignment,
      :TTF_GetFontWrapAlignment => :TTF_GetFontWrapAlignment,
      :TTF_GetFontHeight => :TTF_GetFontHeight,
      :TTF_GetFontAscent => :TTF_GetFontAscent,
      :TTF_GetFontDescent => :TTF_GetFontDescent,
      :TTF_SetFontLineSkip => :TTF_SetFontLineSkip,
      :TTF_GetFontLineSkip => :TTF_GetFontLineSkip,
      :TTF_SetFontKerning => :TTF_SetFontKerning,
      :TTF_GetFontKerning => :TTF_GetFontKerning,
      :TTF_FontIsFixedWidth => :TTF_FontIsFixedWidth,
      :TTF_FontIsScalable => :TTF_FontIsScalable,
      :TTF_GetFontFamilyName => :TTF_GetFontFamilyName,
      :TTF_GetFontStyleName => :TTF_GetFontStyleName,
      :TTF_RenderText_Solid => :TTF_RenderText_Solid,
      :TTF_RenderText_Solid_Wrapped => :TTF_RenderText_Solid_Wrapped,
      :TTF_RenderGlyph_Solid => :TTF_RenderGlyph_Solid,
      :TTF_SetFontDirection => :TTF_SetFontDirection,
      :TTF_GetFontDirection => :TTF_GetFontDirection,
      :TTF_SetFontScript => :TTF_SetFontScript,
      :TTF_GetGlyphScript => :TTF_GetGlyphScript,
      :TTF_SetFontLanguage => :TTF_SetFontLanguage,
      :TTF_FontHasGlyph => :TTF_FontHasGlyph,
      :TTF_GetGlyphImage => :TTF_GetGlyphImage,
      :TTF_GetGlyphImageForIndex => :TTF_GetGlyphImageForIndex,
      :TTF_GetGlyphMetrics => :TTF_GetGlyphMetrics,
      :TTF_GetGlyphKerning => :TTF_GetGlyphKerning,
      :TTF_GetStringSize => :TTF_GetStringSize,
      :TTF_GetStringSizeWrapped => :TTF_GetStringSizeWrapped,
      :TTF_MeasureString => :TTF_MeasureString,
      :TTF_RenderText_Shaded => :TTF_RenderText_Shaded,
      :TTF_RenderText_Shaded_Wrapped => :TTF_RenderText_Shaded_Wrapped,
      :TTF_RenderGlyph_Shaded => :TTF_RenderGlyph_Shaded,
      :TTF_RenderText_Blended => :TTF_RenderText_Blended,
      :TTF_RenderText_Blended_Wrapped => :TTF_RenderText_Blended_Wrapped,
      :TTF_RenderGlyph_Blended => :TTF_RenderGlyph_Blended,
      :TTF_RenderText_LCD => :TTF_RenderText_LCD,
      :TTF_RenderText_LCD_Wrapped => :TTF_RenderText_LCD_Wrapped,
      :TTF_RenderGlyph_LCD => :TTF_RenderGlyph_LCD,
      :TTF_CreateSurfaceTextEngine => :TTF_CreateSurfaceTextEngine,
      :TTF_DrawSurfaceText => :TTF_DrawSurfaceText,
      :TTF_DestroySurfaceTextEngine => :TTF_DestroySurfaceTextEngine,
      :TTF_CreateRendererTextEngine => :TTF_CreateRendererTextEngine,
      :TTF_DrawRendererText => :TTF_DrawRendererText,
      :TTF_DestroyRendererTextEngine => :TTF_DestroyRendererTextEngine,
      :TTF_CreateGPUTextEngine => :TTF_CreateGPUTextEngine,
      :TTF_GetGPUTextDrawData => :TTF_GetGPUTextDrawData,
      :TTF_DestroyGPUTextEngine => :TTF_DestroyGPUTextEngine,
      :TTF_SetGPUTextEngineWinding => :TTF_SetGPUTextEngineWinding,
      :TTF_GetGPUTextEngineWinding => :TTF_GetGPUTextEngineWinding,
      :TTF_CreateText => :TTF_CreateText,
      :TTF_GetTextProperties => :TTF_GetTextProperties,
      :TTF_SetTextEngine => :TTF_SetTextEngine,
      :TTF_GetTextEngine => :TTF_GetTextEngine,
      :TTF_SetTextFont => :TTF_SetTextFont,
      :TTF_GetTextFont => :TTF_GetTextFont,
      :TTF_SetTextColor => :TTF_SetTextColor,
      :TTF_SetTextColorFloat => :TTF_SetTextColorFloat,
      :TTF_GetTextColor => :TTF_GetTextColor,
      :TTF_GetTextColorFloat => :TTF_GetTextColorFloat,
      :TTF_SetTextPosition => :TTF_SetTextPosition,
      :TTF_GetTextPosition => :TTF_GetTextPosition,
      :TTF_SetTextWrapWidth => :TTF_SetTextWrapWidth,
      :TTF_GetTextWrapWidth => :TTF_GetTextWrapWidth,
      :TTF_SetTextWrapWhitespaceVisible => :TTF_SetTextWrapWhitespaceVisible,
      :TTF_TextWrapWhitespaceVisible => :TTF_TextWrapWhitespaceVisible,
      :TTF_SetTextString => :TTF_SetTextString,
      :TTF_InsertTextString => :TTF_InsertTextString,
      :TTF_AppendTextString => :TTF_AppendTextString,
      :TTF_DeleteTextString => :TTF_DeleteTextString,
      :TTF_GetTextSize => :TTF_GetTextSize,
      :TTF_GetTextSubString => :TTF_GetTextSubString,
      :TTF_GetTextSubStringForLine => :TTF_GetTextSubStringForLine,
      :TTF_GetTextSubStringsForRange => :TTF_GetTextSubStringsForRange,
      :TTF_GetTextSubStringForPoint => :TTF_GetTextSubStringForPoint,
      :TTF_GetPreviousTextSubString => :TTF_GetPreviousTextSubString,
      :TTF_GetNextTextSubString => :TTF_GetNextTextSubString,
      :TTF_UpdateText => :TTF_UpdateText,
      :TTF_DestroyText => :TTF_DestroyText,
      :TTF_CloseFont => :TTF_CloseFont,
      :TTF_Quit => :TTF_Quit,
      :TTF_WasInit => :TTF_WasInit,
    }
    args = {
      :TTF_Version => [],
      :TTF_GetFreeTypeVersion => [:pointer, :pointer, :pointer],
      :TTF_GetHarfBuzzVersion => [:pointer, :pointer, :pointer],
      :TTF_Init => [],
      :TTF_OpenFont => [:pointer, :float],
      :TTF_OpenFontIO => [:pointer, :bool, :float],
      :TTF_OpenFontWithProperties => [:uint],
      :TTF_GetFontProperties => [:pointer],
      :TTF_GetFontGeneration => [:pointer],
      :TTF_SetFontSize => [:pointer, :float],
      :TTF_SetFontSizeDPI => [:pointer, :float, :int, :int],
      :TTF_GetFontSize => [:pointer],
      :TTF_GetFontDPI => [:pointer, :pointer, :pointer],
      :TTF_SetFontStyle => [:pointer, :uint],
      :TTF_GetFontStyle => [:pointer],
      :TTF_SetFontOutline => [:pointer, :int],
      :TTF_GetFontOutline => [:pointer],
      :TTF_SetFontHinting => [:pointer, :int],
      :TTF_GetFontHinting => [:pointer],
      :TTF_SetFontSDF => [:pointer, :bool],
      :TTF_GetFontSDF => [:pointer],
      :TTF_SetFontWrapAlignment => [:pointer, :int],
      :TTF_GetFontWrapAlignment => [:pointer],
      :TTF_GetFontHeight => [:pointer],
      :TTF_GetFontAscent => [:pointer],
      :TTF_GetFontDescent => [:pointer],
      :TTF_SetFontLineSkip => [:pointer, :int],
      :TTF_GetFontLineSkip => [:pointer],
      :TTF_SetFontKerning => [:pointer, :bool],
      :TTF_GetFontKerning => [:pointer],
      :TTF_FontIsFixedWidth => [:pointer],
      :TTF_FontIsScalable => [:pointer],
      :TTF_GetFontFamilyName => [:pointer],
      :TTF_GetFontStyleName => [:pointer],
      :TTF_RenderText_Solid => [:pointer, :pointer, :ulong_long, Color.by_value],
      :TTF_RenderText_Solid_Wrapped => [:pointer, :pointer, :ulong_long, Color.by_value, :int],
      :TTF_RenderGlyph_Solid => [:pointer, :uint, Color.by_value],
      :TTF_SetFontDirection => [:pointer, :int],
      :TTF_GetFontDirection => [:pointer],
      :TTF_SetFontScript => [:pointer, :pointer],
      :TTF_GetGlyphScript => [:uint, :pointer, :ulong_long],
      :TTF_SetFontLanguage => [:pointer, :pointer],
      :TTF_FontHasGlyph => [:pointer, :uint],
      :TTF_GetGlyphImage => [:pointer, :uint],
      :TTF_GetGlyphImageForIndex => [:pointer, :uint],
      :TTF_GetGlyphMetrics => [:pointer, :uint, :pointer, :pointer, :pointer, :pointer, :pointer],
      :TTF_GetGlyphKerning => [:pointer, :uint, :uint, :pointer],
      :TTF_GetStringSize => [:pointer, :pointer, :ulong_long, :pointer, :pointer],
      :TTF_GetStringSizeWrapped => [:pointer, :pointer, :ulong_long, :int, :pointer, :pointer],
      :TTF_MeasureString => [:pointer, :pointer, :ulong_long, :int, :pointer, :pointer],
      :TTF_RenderText_Shaded => [:pointer, :pointer, :ulong_long, Color.by_value, Color.by_value],
      :TTF_RenderText_Shaded_Wrapped => [:pointer, :pointer, :ulong_long, Color.by_value, Color.by_value, :int],
      :TTF_RenderGlyph_Shaded => [:pointer, :uint, Color.by_value, Color.by_value],
      :TTF_RenderText_Blended => [:pointer, :pointer, :ulong_long, Color.by_value],
      :TTF_RenderText_Blended_Wrapped => [:pointer, :pointer, :ulong_long, Color.by_value, :int],
      :TTF_RenderGlyph_Blended => [:pointer, :uint, Color.by_value],
      :TTF_RenderText_LCD => [:pointer, :pointer, :ulong_long, Color.by_value, Color.by_value],
      :TTF_RenderText_LCD_Wrapped => [:pointer, :pointer, :ulong_long, Color.by_value, Color.by_value, :int],
      :TTF_RenderGlyph_LCD => [:pointer, :uint, Color.by_value, Color.by_value],
      :TTF_CreateSurfaceTextEngine => [],
      :TTF_DrawSurfaceText => [:pointer, :int, :int, :pointer],
      :TTF_DestroySurfaceTextEngine => [:pointer],
      :TTF_CreateRendererTextEngine => [:pointer],
      :TTF_DrawRendererText => [:pointer, :float, :float],
      :TTF_DestroyRendererTextEngine => [:pointer],
      :TTF_CreateGPUTextEngine => [:pointer],
      :TTF_GetGPUTextDrawData => [:pointer],
      :TTF_DestroyGPUTextEngine => [:pointer],
      :TTF_SetGPUTextEngineWinding => [:pointer, :int],
      :TTF_GetGPUTextEngineWinding => [:pointer],
      :TTF_CreateText => [:pointer, :pointer, :pointer, :ulong_long],
      :TTF_GetTextProperties => [:pointer],
      :TTF_SetTextEngine => [:pointer, :pointer],
      :TTF_GetTextEngine => [:pointer],
      :TTF_SetTextFont => [:pointer, :pointer],
      :TTF_GetTextFont => [:pointer],
      :TTF_SetTextColor => [:pointer, :uchar, :uchar, :uchar, :uchar],
      :TTF_SetTextColorFloat => [:pointer, :float, :float, :float, :float],
      :TTF_GetTextColor => [:pointer, :pointer, :pointer, :pointer, :pointer],
      :TTF_GetTextColorFloat => [:pointer, :pointer, :pointer, :pointer, :pointer],
      :TTF_SetTextPosition => [:pointer, :int, :int],
      :TTF_GetTextPosition => [:pointer, :pointer, :pointer],
      :TTF_SetTextWrapWidth => [:pointer, :int],
      :TTF_GetTextWrapWidth => [:pointer, :pointer],
      :TTF_SetTextWrapWhitespaceVisible => [:pointer, :bool],
      :TTF_TextWrapWhitespaceVisible => [:pointer],
      :TTF_SetTextString => [:pointer, :pointer, :ulong_long],
      :TTF_InsertTextString => [:pointer, :int, :pointer, :ulong_long],
      :TTF_AppendTextString => [:pointer, :pointer, :ulong_long],
      :TTF_DeleteTextString => [:pointer, :int, :int],
      :TTF_GetTextSize => [:pointer, :pointer, :pointer],
      :TTF_GetTextSubString => [:pointer, :int, :pointer],
      :TTF_GetTextSubStringForLine => [:pointer, :int, :pointer],
      :TTF_GetTextSubStringsForRange => [:pointer, :int, :int, :pointer],
      :TTF_GetTextSubStringForPoint => [:pointer, :int, :int, :pointer],
      :TTF_GetPreviousTextSubString => [:pointer, :pointer, :pointer],
      :TTF_GetNextTextSubString => [:pointer, :pointer, :pointer],
      :TTF_UpdateText => [:pointer],
      :TTF_DestroyText => [:pointer],
      :TTF_CloseFont => [:pointer],
      :TTF_Quit => [],
      :TTF_WasInit => [],
    }
    retvals = {
      :TTF_Version => :int,
      :TTF_GetFreeTypeVersion => :void,
      :TTF_GetHarfBuzzVersion => :void,
      :TTF_Init => :bool,
      :TTF_OpenFont => :pointer,
      :TTF_OpenFontIO => :pointer,
      :TTF_OpenFontWithProperties => :pointer,
      :TTF_GetFontProperties => :uint,
      :TTF_GetFontGeneration => :uint,
      :TTF_SetFontSize => :bool,
      :TTF_SetFontSizeDPI => :bool,
      :TTF_GetFontSize => :float,
      :TTF_GetFontDPI => :bool,
      :TTF_SetFontStyle => :void,
      :TTF_GetFontStyle => :uint,
      :TTF_SetFontOutline => :bool,
      :TTF_GetFontOutline => :int,
      :TTF_SetFontHinting => :void,
      :TTF_GetFontHinting => :int,
      :TTF_SetFontSDF => :bool,
      :TTF_GetFontSDF => :bool,
      :TTF_SetFontWrapAlignment => :void,
      :TTF_GetFontWrapAlignment => :int,
      :TTF_GetFontHeight => :int,
      :TTF_GetFontAscent => :int,
      :TTF_GetFontDescent => :int,
      :TTF_SetFontLineSkip => :void,
      :TTF_GetFontLineSkip => :int,
      :TTF_SetFontKerning => :void,
      :TTF_GetFontKerning => :bool,
      :TTF_FontIsFixedWidth => :bool,
      :TTF_FontIsScalable => :bool,
      :TTF_GetFontFamilyName => :pointer,
      :TTF_GetFontStyleName => :pointer,
      :TTF_RenderText_Solid => :pointer,
      :TTF_RenderText_Solid_Wrapped => :pointer,
      :TTF_RenderGlyph_Solid => :pointer,
      :TTF_SetFontDirection => :bool,
      :TTF_GetFontDirection => :int,
      :TTF_SetFontScript => :bool,
      :TTF_GetGlyphScript => :bool,
      :TTF_SetFontLanguage => :bool,
      :TTF_FontHasGlyph => :bool,
      :TTF_GetGlyphImage => :pointer,
      :TTF_GetGlyphImageForIndex => :pointer,
      :TTF_GetGlyphMetrics => :bool,
      :TTF_GetGlyphKerning => :bool,
      :TTF_GetStringSize => :bool,
      :TTF_GetStringSizeWrapped => :bool,
      :TTF_MeasureString => :bool,
      :TTF_RenderText_Shaded => :pointer,
      :TTF_RenderText_Shaded_Wrapped => :pointer,
      :TTF_RenderGlyph_Shaded => :pointer,
      :TTF_RenderText_Blended => :pointer,
      :TTF_RenderText_Blended_Wrapped => :pointer,
      :TTF_RenderGlyph_Blended => :pointer,
      :TTF_RenderText_LCD => :pointer,
      :TTF_RenderText_LCD_Wrapped => :pointer,
      :TTF_RenderGlyph_LCD => :pointer,
      :TTF_CreateSurfaceTextEngine => :pointer,
      :TTF_DrawSurfaceText => :bool,
      :TTF_DestroySurfaceTextEngine => :void,
      :TTF_CreateRendererTextEngine => :pointer,
      :TTF_DrawRendererText => :bool,
      :TTF_DestroyRendererTextEngine => :void,
      :TTF_CreateGPUTextEngine => :pointer,
      :TTF_GetGPUTextDrawData => :pointer,
      :TTF_DestroyGPUTextEngine => :void,
      :TTF_SetGPUTextEngineWinding => :void,
      :TTF_GetGPUTextEngineWinding => :int,
      :TTF_CreateText => :pointer,
      :TTF_GetTextProperties => :uint,
      :TTF_SetTextEngine => :bool,
      :TTF_GetTextEngine => :pointer,
      :TTF_SetTextFont => :bool,
      :TTF_GetTextFont => :pointer,
      :TTF_SetTextColor => :bool,
      :TTF_SetTextColorFloat => :bool,
      :TTF_GetTextColor => :bool,
      :TTF_GetTextColorFloat => :bool,
      :TTF_SetTextPosition => :bool,
      :TTF_GetTextPosition => :bool,
      :TTF_SetTextWrapWidth => :bool,
      :TTF_GetTextWrapWidth => :bool,
      :TTF_SetTextWrapWhitespaceVisible => :bool,
      :TTF_TextWrapWhitespaceVisible => :bool,
      :TTF_SetTextString => :bool,
      :TTF_InsertTextString => :bool,
      :TTF_AppendTextString => :bool,
      :TTF_DeleteTextString => :bool,
      :TTF_GetTextSize => :bool,
      :TTF_GetTextSubString => :bool,
      :TTF_GetTextSubStringForLine => :bool,
      :TTF_GetTextSubStringsForRange => :pointer,
      :TTF_GetTextSubStringForPoint => :bool,
      :TTF_GetPreviousTextSubString => :bool,
      :TTF_GetNextTextSubString => :bool,
      :TTF_UpdateText => :bool,
      :TTF_DestroyText => :void,
      :TTF_CloseFont => :void,
      :TTF_Quit => :void,
      :TTF_WasInit => :int,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

